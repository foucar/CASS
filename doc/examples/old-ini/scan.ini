;;
;; example to show how to use the new pnCCD analysis to retrieve a normalized spectrum and
;; plot this vs a scanning value. The values that are used to normalize and the values to
;; normalize are beeing written into a hdf5 file.
;;

[Converter]
Used = Machine,pixeldetector

[PreAnalyzer]
useCommercialCCDAnalyzer = false
usepnCCDAnalyzer = false


;setup the pixeldetector
[PixelDetectors]
PnCCD/Detector = 0                        ; 0:  pnCCD detector
;PnCCD/FrameProcessorType = "none"        ; none: Just use the raw image
PnCCD/FrameProcessorType = "hll"          ; hll: HLL type processing
;PnCCD/HLLProcessing/CommonModeCalculationType = "none"
PnCCD/HLLProcessing/CommonModeCalculationType = "simpleMean"
;PnCCD/HLLProcessing/CommonModeCalculationType = "mean"
;PnCCD/HLLProcessing/CommonModeCalculationType = "median"
PnCCD/HLLProcessing/CommonModeCorrection/Width = 128
PnCCD/HLLProcessing/CommonModeCorrection/Multiplier = 4
PnCCD/HLLProcessing/SimpleMeanCommonMode/MinNbrPixels = 8
PnCCD/HLLProcessing/MeanCommonMode/NbrMaxDisregardedValues = 5
PnCCD/HLLProcessing/MeanCommonMode/NbrMinDisregardedValues = 5
PnCCD/HLLProcessing/MeanCommonMode/MinNbrPixels = 8
PnCCD/HLLProcessing/MedianCommonMode/NbrMaxDisregardedValues = 5
PnCCD/HLLProcessing/MedianCommonMode/NbrMinDisregardedValues = 5
PnCCD/HLLProcessing/MedianCommonMode/MinNbrPixels = 8
PnCCD/PixelFinderType = "aboveNoise"     ; uses noise map to identify pixels
PnCCD/AboveNoiseFinder/Multiplier = 4
PnCCD/CoalescingFunctionType = "simple"  ; simple coalscing of pixels
PnCCD/SimpleCoalescing/MaxPixelListSize = 30000 ; if there are more than this amount of pixels in the frame skip the coalscing
PnCCD/SimpleCoalescing/MipThreshold = 16000     ; if one pixel has a value higher than this than the hit is regarded as "ionizing particle" and skipped
PnCCD/SimpleCoalescing/MaxRecursionDepth = 7    ; how deep will the recursive algorithm go
PnCCD/CorrectionMaps/NoisyPixelThreshold = 17 ; all pixels which noises are bigger than this value will be added to the mask
;PnCCD/CorrectionMaps/MapCreatorType = "fixed"  ; fixed amount of events taken to create the correction maps
;PnCCD/CorrectionMaps/FixedCreator/NbrFrames = 200
;PnCCD/CorrectionMaps/FixedCreator/StartInstantly = true
;PnCCD/CorrectionMaps/FixedCreator/DisregardedHighValues = 0
;PnCCD/CorrectionMaps/FixedCreator/DisregardedLowValues = 0
;PnCCD/CorrectionMaps/FixedCreator/UseMedian = false
;PnCCD/CorrectionMaps/FixedCreator/WriteMaps = true
PnCCD/CorrectionMaps/MapCreatorType = "online"  ; fast calculation with fixed amount of events taken to create the correction maps including common mode correction
PnCCD/CorrectionMaps/FixedOnlineCreator/NbrFrames = 200
;PnCCD/CorrectionMaps/FixedOnlineCreator/StartInstantly = true
PnCCD/CorrectionMaps/FixedOnlineCreator/WriteMaps = true
;PnCCD/CorrectionMaps/InputOffsetNoiseFilename = "Preparation_K004_520_0903.darkcal"
PnCCD/CorrectionMaps/OutputOffsetNoiseFiletype = "hll"
PnCCD/CorrectionMaps/CTEGainFiletype= "hll"
PnCCD/CorrectionMaps/CTEGainFilename="Run0381up_gain_cte.dat"
PnCCD/CorrectionMaps/Mask/size = 0
;PnCCD/CorrectionMaps/Mask/1/MaskElementType = "circle"
;PnCCD/CorrectionMaps/Mask/1/CenterX = 500
;PnCCD/CorrectionMaps/Mask/1/CenterY = 500
;PnCCD/CorrectionMaps/Mask/1/Radius = 100
;PnCCD/CorrectionMaps/Mask/2/MaskElementType = "square"
;PnCCD/CorrectionMaps/Mask/2/LowerLeftX = 10
;PnCCD/CorrectionMaps/Mask/2/LowerLeftY = 10
;PnCCD/CorrectionMaps/Mask/2/UpperRightX = 90
;PnCCD/CorrectionMaps/Mask/2/UpperRightY = 90
;PnCCD/CorrectionMaps/Mask/3/MaskElementType = "ellipse"
;PnCCD/CorrectionMaps/Mask/3/CenterX = 500
;PnCCD/CorrectionMaps/Mask/3/CenterY = 500
;PnCCD/CorrectionMaps/Mask/3/SemiAxisX = 50
;PnCCD/CorrectionMaps/Mask/3/SemiAxisY = 10
;PnCCD/CorrectionMaps/Mask/4/MaskElementType = "triangle"
;PnCCD/CorrectionMaps/Mask/4/PointA_X = 10
;PnCCD/CorrectionMaps/Mask/4/PointA_Y = 10
;PnCCD/CorrectionMaps/Mask/4/PointB_X = 20
;PnCCD/CorrectionMaps/Mask/4/PointB_Y = 10
;PnCCD/CorrectionMaps/Mask/4/PointC_X = 10
;PnCCD/CorrectionMaps/Mask/4/PointC_Y = 20

; the proccesed image
[PostProcessor]
PnCCD/ID = 105
PnCCD/Detector = PnCCD
PnCCD/Write = false
PnCCDRot90/ID = 55
PnCCDRot90/HistName = PnCCD
PnCCDRot90/Operation = 90DegCCW
PnCCDRot90/Write = false


; display the correction maps
[PostProcessor]
NoiseMap/ID = 107
NoiseMap/Detector = PnCCD
NoiseMap/MapType = noise
NoiseMap/Write = false
NoiseMapRot90/ID = 55
NoiseMapRot90/HistName = NoiseMap
NoiseMapRot90/Operation = 90DegCCW
NoiseMapRot90/Write = false

; the offset map
[PostProcessor]
OffsetMap/ID = 107
OffsetMap/Detector = PnCCD
OffsetMap/MapType = offset
OffsetMap/Write = false
OffsetMapRot90/ID = 55
OffsetMapRot90/HistName = OffsetMap
OffsetMapRot90/Operation = 90DegCCW
OffsetMapRot90/Write = false

; the resulting correction map for the hll processing
[PostProcessor]
CorrMap/ID = 107
CorrMap/Detector = PnCCD
CorrMap/MapType = correction
CorrMap/Write = false
CorrMapRot90/ID = 55
CorrMapRot90/HistName = CorrMap
CorrMapRot90/Operation = 90DegCCW
CorrMapRot90/Write = false


; -------------------------------------------------

; filter on the FEL intensity
[PostProcessor]
IsGoodFelShot/ID = 9
IsGoodFelShot/HistName = FEL
IsGoodFelShot/LowerLimit = 0.05
IsGoodFelShot/UpperLimit = 1


;-----------------------------------------------
; sum of all pixels
; use this if you want to include all pixels of the pnCCD (this is what you had before)
[PostProcessor]
SumPixels/ID = 108
SumPixels/Detector = PnCCD
SumPixels/Write = true

; moving average of the sum of all pixels
[PostProcessor]
SumPixelsMovAve/ID = 61
SumPixelsMovAve/NbrOfAverages = 180
SumPixelsMovAve/HistName = SumPixels
SumPixelsMovAve/Write = false

; average of the sum of all pixels
[PostProcessor]
SumPixelsSum/ID = 62
SumPixelsSum/HistName = SumPixels
SumPixelsSum/Write = false
SumPixelsSum/ConditionName = IsGoodFelShot
SumPixelsSumFills/ID = 80
SumPixelsSumFills/HistName = SumPixelsSum
SumPixelsSumFills/Write = false
SumPixelsAve/ID = 22
SumPixelsAve/HistOne = SumPixelsSum
SumPixelsAve/HistTwo = SumPixelsSumFills
SumPixelsAve/Write = false
ZSumPixelsSumClear/ID = 75
ZSumPixelsSumClear/HistName = SumPixelsSum
ZSumPixelsSumClear/ConditionName = ScanValueChanged
ZSumPixelsSumClear/Write = false
ZSumPixelsSumClear/Hide = true



;-------------------------------------

; sum of all pixels containing a photon
[PostProcessor]
SumPhotonPixels/ID = 155
SumPhotonPixels/Detector = PnCCD
SumPhotonPixels/Write = true

; spectrum created from pixels containing a photon
[PostProcessor]
PreSpectrum/ID = 147
PreSpectrum/Detector = PnCCD
PreSpectrum/XNbrBins = 8000
PreSpectrum/XLow = 0
PreSpectrum/XUp = 8000
PreSpectrum/XTitle = pixel values [adu]
PreSpectrum/Write = false
PreSpectrumSum/ID = 62
PreSpectrumSum/HistName = PreSpectrum
PreSpectrumSum/Write = false

; the number of non coalesced "photon" pixels found
[PostProcessor]
NbrPixels/ID = 149
NbrPixels/Detector = PnCCD
NbrPixels/Write = false
NbrPixelsHist/ID = 60
NbrPixelsHist/HistName = NbrPixels
NbrPixelsHist/XNbrBins = 1000
NbrPixelsHist/XLow = 0
NbrPixelsHist/XUp = 50000
NbrPixelsHist/XTitle = "Nbr of Found Pixels"
NbrPixelsHist/Write = false
NbrPixelsHistSum/ID = 62
NbrPixelsHistSum/HistName = NbrPixelsHist
NbrPixelsHistSum/Write = false


;----------------------------------------------------------

; the sum of all coalesced photon pixels (hits)
[PostProcessor]
SumHits/ID = 156
SumHits/Detector = PnCCD
SumHits/SplitLevelLowerLimit = 0
SumHits/SplitLevelUpperLimit = 10
SumHits/Write = true

; spectrum of coalesced "photon" pixels (hits)
; use this if you want to plot only the real photons
[PostProcessor]
Spectrum/ID = 143
Spectrum/Detector = PnCCD
Spectrum/SplitLevelLowerLimit = 0
Spectrum/SplitLevelUpperLimit = 5
Spectrum/XNbrBins = 8000
Spectrum/XLow = 0
Spectrum/XUp = 8000
Spectrum/XTitle = pixel values [adu]
Spectrum/Write = false
SpectrumSum/ID = 62
SpectrumSum/HistName = Spectrum
SpectrumSum/Write = false
ZSpectrumSumClear/ID = 75
ZSpectrumSumClear/HistName = SpectrumSum
ZSpectrumSumClear/ConditionName = ScanValueChanged
ZSpectrumSumClear/Write = false


; integrate part of the PNCCD spectrum
[PostProcessor]
SpectrumIntegral/ID=51
SpectrumIntegral/LowerBound= 3000
SpectrumIntegral/UpperBound= 3500
SpectrumIntegral/HistName = Spectrum
SpectrumIntegral/Write = false



; moving average of the sum of all coalesced photons
[PostProcessor]
SumHitsMovAve/ID = 61
SumHitsMovAve/NbrOfAverages = 100
SumHitsMovAve/HistName = SumHits
SumHitsMovAve/HistName = SpectrumIntegral
SumHitsMovAve/Write = false

; average of the sum of all coalesced photons
[PostProcessor]
SumHitsSum/ID = 62
;SumHitsSum/HistName = SumHits
SumHitsSum/HistName = SpectrumIntegral
SumHitsSum/Write = false
SumHitsSumFills/ID = 80
SumHitsSumFills/HistName = SumHitsSum
SumHitsSumFills/Write = false
SumHitsAve/ID = 22
SumHitsAve/HistOne = SumHitsSum
SumHitsAve/HistTwo = SumHitsSumFills
SumHitsAve/Write = false
ZSumHitsSumClear/ID = 75
ZSumHitsSumClear/HistName = SumHitsSum
ZSumHitsSumClear/ConditionName = ScanValueChanged
ZSumHitsSumClear/Write = false

; histogram of the splitlevel of coalesced "photon" (hit)
[PostProcessor]
HitSplitLvl/ID = 146
HitSplitLvl/Detector = PnCCD
HitSplitLvl/XNbrBins = 200
HitSplitLvl/XLow = 0
HitSplitLvl/XUp = 100
HitSplitLvl/XTitle = pixel values [adu]
HitSplitLvl/Write = false
HitSplitLvlSum/ID = 62
HitSplitLvlSum/HistName = HitSplitLvl
HitSplitLvlSum/Write = false

; the number of coalesced "photon" pixels (hits) found
[PostProcessor]
NbrHits/ID = 145
NbrHits/Detector = PnCCD
NbrHits/Write = false
NbrHitsHist/ID = 60
NbrHitsHist/HistName = NbrHits
NbrHitsHist/XNbrBins = 1000
NbrHitsHist/XLow = 0
NbrHitsHist/XUp = 50000
NbrHitsHist/XTitle = "Nbr of coalsced pixels"
NbrHitsHist/Write = false
NbrHitsHistSum/ID = 62
NbrHitsHistSum/HistName = NbrHitsHist
NbrHitsHistSum/Write = false


;------------------------------------------------



; the scanned value and check whether the scanned value changed
[PostProcessor]
ScanValue/ID = 120
ScanValue/VariableName = lxt
ScanValue/Write = false
ScanValueChanged/ID = 15
ScanValueChanged/HistName = ScanValue
ScanValueChanged/Write = false



;-----------------------------------------


; FEL intensity
[PostProcessor]
FEL/ID = 120
FEL/VariableName = XppSb3Ipm_sum
FEL/Write = true
FEL/WriteSummary = false

; moving average of FEL Intensity
[PostProcessor]
FELMovAve/ID = 61
FELMovAve/NbrOfAverages = 180
FELMovAve/HistName = FEL
FELMovAve/Write = false

; average of the FEL intensity
[PostProcessor]
FELSum/ID = 62
FELSum/HistName = FEL
FELSum/Write = false
FELSum/ConditionName = IsGoodFelShot
FELSumFills/ID = 80
FELSumFills/HistName = FELSum
FELSumFills/Write = false
FELAve/ID = 22
FELAve/HistOne = FELSum
FELAve/HistTwo = FELSumFills
FELAve/Write = false
ZXFELSumClear/ID = 75
ZXFELSumClear/HistName = FELSum
ZXFELSumClear/ConditionName = ScanValueChanged
ZXFELSumClear/Write = false
ZXFELSumClear/Hide = true

;---------------------------------------------------

; XRD value
[PostProcessor]
XRD/ID = 120
XRD/VariableName = XppEndstation_CorrectChannel0
XRD/Write = true
XRD/WriteSummary = false

; moving average of XRD
[PostProcessor]
XRDMovAve/ID = 61
XRDMovAve/NbrOfAverages = 180
XRDMovAve/HistName = XRD
XRDMovAve/Write = false

; average of the XRD
[PostProcessor]
XRDSum/ID = 62
XRDSum/HistName = XRD
XRDSum/Write = false
XRDSum/ConditionName = IsGoodFelShot
XRDSumFills/ID = 80
XRDSumFills/HistName = XRDSum
XRDSumFills/Write = false
XRDAve/ID = 22
XRDAve/HistOne = XRDSum
XRDAve/HistTwo = XRDSumFills
XRDAve/Write = false
ZXRDSumClear/ID = 75
ZXRDSumClear/HistName = XRDSum
ZXRDSumClear/ConditionName = ScanValueChanged
ZXRDSumClear/Write = false
ZXRDSumClear/Hide = true



;----------------------------------------------------------


;normalize XRD by FEL intensity

[PostProcessor]
XRDMovNorm/ID = 22
XRDMovNorm/HistOne = XRDMovAve
XRDMovNorm/HistTwo = FELMovAve
XRDMovNorm/Write = false

; the normalized XRD average (using fatons way)
[PostProcessor]
XRDNorm/ID = 22
XRDNorm/HistOne = XRDAve
XRDNorm/HistTwo = FELAve
XRDNorm/Write = false



;----------------------------------------------------------


; the scan of the normalized XRD value (using moving average)
[PostProcessor]
XRDMovScan/ID = 69
XRDMovScan/XNbrBins = 60   ;!!! needs to be adjusted
XRDMovScan/XLow = -20e-12 ;!!! needs to be adjusted
XRDMovScan/XUp = 40e-12    ;!!! needs to be adjusted
XRDMovScan/XTitle = lxt
XRDMovScan/HistOne = ScanValue
XRDMovScan/HistTwo = XRDMovNorm
XRDMovScan/Write = false

; the scan of the normalized XRD value (fatons way)
[PostProcessor]
XRDScan/ID = 69
XRDScan/XNbrBins = 79
XRDScan/XLow = -20e-12
XRDScan/XUp = 60e-12
XRDScan/XTitle = lxt
XRDScan/HistOne = ScanValue
XRDScan/HistTwo = XRDNorm
XRDScan/Write = false



;-------------------------------------------------------




; the normalized pnCCD average (using moving average)
[PostProcessor]
pnCCDMovNorm/ID = 22
pnCCDMovNorm/HistOne = SumPixelsMovAve         ; sum of all pixels the old way
;pnCCDMovNorm/HistOne = SumHitsMovAve          ; sum of the coalesced pixels
pnCCDMovNorm/HistTwo = FELMovAve
pnCCDMovNorm/Write = false

; the normalized pnCCD average (using average)
[PostProcessor]
pnCCDNorm/ID = 22
pnCCDNorm/HistOne = SumPixelsAve         ; sum of all pixels the old way
;pnCCDNorm/HistOne = SumHitsAve          ; sum of the coalesced pixels
pnCCDNorm/HistTwo = FELAve
pnCCDNorm/Write = false


;-----------------------------------------------------------

; the scan of the normalized pnCCD value (using moving average)
[PostProcessor]
pnCCDMovScan/ID = 69
pnCCDMovScan/XNbrBins = 59
pnCCDMovScan/XLow = -20e-12
pnCCDMovScan/XUp = 60e-12
pnCCDMovScan/XTitle = lxt
pnCCDMovScan/HistOne = ScanValue
pnCCDMovScan/HistTwo = pnCCDMovNorm
pnCCDMovScan/Write = false

; the scan of the normalized pnCCD value (using average)
[PostProcessor]
pnCCDScan/ID = 69
pnCCDScan/XNbrBins = 79
pnCCDScan/XLow = -20e-12
pnCCDScan/XUp = 60e-12
pnCCDScan/XTitle = lxt
pnCCDScan/HistOne = ScanValue
pnCCDScan/HistTwo = pnCCDNorm
pnCCDScan/Write = false


;-------------------------------------------------------


; scan of the FEL intensity (normalization value) for comparison
[PostProcessor]
FelScan/ID = 69
FelScan/XNbrBins = 79
FelScan/XLow = -20e-12
FelScan/XUp = 60e-12
FelScan/XTitle = lxt
FelScan/HistOne = ScanValue
FelScan/HistTwo = FELAve
FelScan/Write = false



