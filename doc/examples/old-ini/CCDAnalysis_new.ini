;
; This ini file shows how the new analysis frame work for
; pixel detectors is used for commercial ccd.
;

; general setup

[Converter]
Used = pixeldetector

;disable the pre analyzers as their functionality is ported to the new framework
[PreAnalyzer]
useCommercialCCDAnalyzer = false
usepnCCDAnalyzer = false


;setup the pixeldetectors
[PixelDetectors]
Ions/Detector = 2                       ; 2: first commercial ccd
Ions/FrameProcessorType = "none"        ; none: Just use the raw image
Ions/PixelFinderType = "simple"         ; uses pers algorithm to find pixels
Ions/SimpleFinder/Threshold = 4
; if one wants to use the mask, then one has to use the hll frame processing
; with all the other corrections disabled.
;Ions/CorrectionMaps/Mask/size = 0
;Ions/CorrectionMaps/Mask/1/MaskElementType = "circle"
;Ions/CorrectionMaps/Mask/1/CenterX = 500
;Ions/CorrectionMaps/Mask/1/CenterY = 500
;Ions/CorrectionMaps/Mask/1/Radius = 100
;Ions/CorrectionMaps/Mask/2/MaskElementType = "square"
;Ions/CorrectionMaps/Mask/2/LowerLeftX = 10
;Ions/CorrectionMaps/Mask/2/LowerLeftY = 10
;Ions/CorrectionMaps/Mask/2/UpperRightX = 90
;Ions/CorrectionMaps/Mask/2/UpperRightY = 90
;Ions/CorrectionMaps/Mask/3/MaskElementType = "ellipse"
;Ions/CorrectionMaps/Mask/3/CenterX = 500
;Ions/CorrectionMaps/Mask/3/CenterY = 500
;Ions/CorrectionMaps/Mask/3/SemiAxisX = 50
;Ions/CorrectionMaps/Mask/3/SemiAxisY = 10
;Ions/CorrectionMaps/Mask/4/MaskElementType = "triangle"
;Ions/CorrectionMaps/Mask/4/PointA_X = 10
;Ions/CorrectionMaps/Mask/4/PointA_Y = 10
;Ions/CorrectionMaps/Mask/4/PointB_X = 20
;Ions/CorrectionMaps/Mask/4/PointB_Y = 10
;Ions/CorrectionMaps/Mask/4/PointC_X = 10
;Ions/CorrectionMaps/Mask/4/PointC_Y = 20


;---- postprocessors----

; the proccesed image
[PostProcessor]
Ions/ID = 105
Ions/Detector = Ions
Ions/Write = true

[PostProcessor] ; the resulting correction map for the hll processing
IonsCorrMap/ID = 107
IonsCorrMap/Detector = Ions
IonsCorrMap/MapType = correction

[PostProcessor] ; histogram of all pixels
IonsHist/ID = 106
IonsHist/Detector = Ions
IonsHist/XNbrBins = 1000
IonsHist/XLow = 0
IonsHist/XUp = 16400
IonsHist/XTitle = pixel values [adu]


[PostProcessor] ; histogram of non coalesced "photon" pixels
IonsPixelHist/ID = 147
IonsPixelHist/Detector = Ions
IonsPixelHist/XNbrBins = 1000
IonsPixelHist/XLow = 0
IonsPixelHist/XUp = 16400
IonsPixelHist/XTitle = pixel values [adu]

; image of non coalesced "photon" pixels as image (will add the pixel value
; at the position where the pixel was found
[PostProcessor]
IonsPixelImage/ID = 148
IonsPixelImage/Detector = Ions
IonsPixelImage/PixelvalueAsWeight = true
IonsPixelImage/SpectralLowerLimit = 0
IonsPixelImage/SpectralUpperLimit = 16400
IonsPixelImage/XNbrBins = 256
IonsPixelImage/XLow = 0
IonsPixelImage/XUp = 1024
IonsPixelImage/XTitle = columns
IonsPixelImage/YNbrBins = 256
IonsPixelImage/YLow = 0
IonsPixelImage/YUp = 1024
IonsPixelImage/YTitle = rows

; image of non coalesced "photon" pixels as histogram (will add just a 1
; at the position where the pixel was found
[PostProcessor]
IonsPixelImageHist/ID = 148
IonsPixelImageHist/Detector = Ions
IonsPixelImageHist/PixelvalueAsWeight = false
IonsPixelImageHist/SpectralLowerLimit = 0
IonsPixelImageHist/SpectralUpperLimit = 16400
IonsPixelImageHist/XNbrBins = 256
IonsPixelImageHist/XLow = 0
IonsPixelImageHist/XUp = 1024
IonsPixelImageHist/XTitle = columns
IonsPixelImageHist/YNbrBins = 256
IonsPixelImageHist/YLow = 0
IonsPixelImageHist/YUp = 1024
IonsPixelImageHist/YTitle = rows

[PostProcessor] ; the number of non coalesced "photon" pixels found
IonsNbrPixels/ID = 149
IonsNbrPixels/Detector = Ions



[PostProcessor] ; histogram of the splitlevel of coalesced "photon" (hit)
IonsHitSplitLvl/ID = 146
IonsHitSplitLvl/Detector = Ions
IonsHitSplitLvl/XNbrBins = 1000
IonsHitSplitLvl/XLow = 0
IonsHitSplitLvl/XUp = 16400
IonsHitSplitLvl/XTitle = pixel values [adu]

[PostProcessor] ; histogram of coalesced "photon" pixels (hits)
IonsHitHist/ID = 143
IonsHitHist/Detector = Ions
IonsHitHist/SplitLevelLowerLimit = 0
IonsHitHist/SplitLevelUpperLimit = 10
IonsHitHist/XNbrBins = 1000
IonsHitHist/XLow = 0
IonsHitHist/XUp = 16400
IonsHitHist/XTitle = pixel values [adu]

; image of hits as image (will add the pixel value at the position 
; where the hit is)
[PostProcessor]
IonsHitImage/ID = 144
IonsHitImage/Detector = Ions
IonsHitImage/PixelvalueAsWeight = true
IonsHitImage/SpectralLowerLimit = 0
IonsHitImage/SpectralUpperLimit = 16400
IonsHitImage/SplitLevelLowerLimit = 0
IonsHitImage/SplitLevelUpperLimit = 10
IonsHitImage/XNbrBins = 256
IonsHitImage/XLow = 0
IonsHitImage/XUp = 1024
IonsHitImage/XTitle = columns
IonsHitImage/YNbrBins = 256
IonsHitImage/YLow = 0
IonsHitImage/YUp = 1024
IonsHitImage/YTitle = rows

; image of hits as histogram (will increment the position where the hit 
; is by 1)
[PostProcessor]
IonsHitImageHist/ID = 144
IonsHitImageHist/Detector = Ions
IonsHitImageHist/PixelvalueAsWeight = false
IonsHitImageHist/SpectralLowerLimit = 0
IonsHitImageHist/SpectralUpperLimit = 16400
IonsHitImageHist/SplitLevelLowerLimit = 0
IonsHitImageHist/SplitLevelUpperLimit = 10
IonsHitImageHist/XNbrBins = 256
IonsHitImageHist/XLow = 0
IonsHitImageHist/XUp = 1024
IonsHitImageHist/XTitle = columns
IonsHitImageHist/YNbrBins = 256
IonsHitImageHist/YLow = 0
IonsHitImageHist/YUp = 1024
IonsHitImageHist/YTitle = rows

[PostProcessor] ; the number of coalesced "photon" pixels (hits) found
IonsNbrHits/ID = 145
IonsNbrHits/Detector = Ions


; operations on the image

[PostProcessor] ; rotate 90 the pnCCD image
IonsRot90PnCCD/ID = 55
IonsRot90PnCCD/HistName = Ions
IonsRot90PnCCD/Operation = 90DegCCW

[PostProcessor] ; rotate 180 the pnCCD image
IonsRot180PnCCD/ID = 55
IonsRot180PnCCD/HistName = Ions
IonsRot180PnCCD/Operation = 180Deg

[PostProcessor] ; rotate 270 the pnCCD image
IonsRot270PnCCD/ID = 55
IonsRot270PnCCD/HistName = Ions
IonsRot270PnCCD/Operation = 270DegCCW

[PostProcessor] ; transpose the pnCCD image
IonsTransPnCCD/ID = 55
IonsTransPnCCD/HistName = Ions
IonsTransPnCCD/Operation = Transpose

[PostProcessor] ; flip vertical the pnCCD image
IonsFlipVertPnCCD/ID = 55
IonsFlipVertPnCCD/HistName = Ions
IonsFlipVertPnCCD/Operation = FlipVertical

[PostProcessor] ; flip horizontal the pnCCD image
IonsFlipHorPnCCD/ID = 55
IonsFlipHorPnCCD/HistName = Ions
IonsFlipHorPnCCD/Operation = FlipHorizontal



;write chosen output to root file (needs option cernroot enabled)
[;PostProcessor]
dump/ID = 2000
