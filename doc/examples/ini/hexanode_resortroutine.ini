;;
;; This example shows how to get the hex-anode data. It displays how one can use
;; achims resort routine to identify detector hits on the detector.
;;



;---------------------------------setup----------------------------------------

;we only need acqiris data, so no ccd preprocessing should be done
[PreAnalyzer]
useCommercialCCDAnalyzer=false
usepnCCDAnalyzer=false

;only extract acqiris adc data from the datagram
[Converter]
Used = Acqiris



;;---set up the Hex Detector. The Layers are called U, V and W. From these we
;;   calculate later the x and y component of the hit on the detector

;general setup
[AcqirisDetectors]
Hexdetector/DetectorType = 0
Hexdetector/DelaylineType = 1

; mcp
Hexdetector/MCP/SignalExtractionMethod=1
Hexdetector/MCP/CenterOfMass/AcqirisInstrument=8
Hexdetector/MCP/CenterOfMass/ChannelNumber=8
Hexdetector/MCP/CenterOfMass/Timeranges/size=1
Hexdetector/MCP/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/MCP/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/MCP/CenterOfMass/Polarity=2
Hexdetector/MCP/CenterOfMass/Threshold=0.05

; u1
Hexdetector/ULayer/One/SignalExtractionMethod=1
Hexdetector/ULayer/One/CenterOfMass/AcqirisInstrument=8
Hexdetector/ULayer/One/CenterOfMass/ChannelNumber=10
Hexdetector/ULayer/One/CenterOfMass/Timeranges/size=1
Hexdetector/ULayer/One/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/ULayer/One/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/ULayer/One/CenterOfMass/Polarity=2
Hexdetector/ULayer/One/CenterOfMass/Threshold=0.05

; u2
Hexdetector/ULayer/Two/SignalExtractionMethod=1
Hexdetector/ULayer/Two/CenterOfMass/AcqirisInstrument=8
Hexdetector/ULayer/Two/CenterOfMass/ChannelNumber=11
Hexdetector/ULayer/Two/CenterOfMass/Timeranges/size=1
Hexdetector/ULayer/Two/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/ULayer/Two/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/ULayer/Two/CenterOfMass/Polarity=2
Hexdetector/ULayer/Two/CenterOfMass/Threshold=0.05

; v1
Hexdetector/VLayer/One/SignalExtractionMethod=1
Hexdetector/VLayer/One/CenterOfMass/AcqirisInstrument=8
Hexdetector/VLayer/One/CenterOfMass/ChannelNumber=6
Hexdetector/VLayer/One/CenterOfMass/Timeranges/size=1
Hexdetector/VLayer/One/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/VLayer/One/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/VLayer/One/CenterOfMass/Polarity=2
Hexdetector/VLayer/One/CenterOfMass/Threshold=0.05

; v2
Hexdetector/VLayer/Two/SignalExtractionMethod=1
Hexdetector/VLayer/Two/CenterOfMass/AcqirisInstrument=8
Hexdetector/VLayer/Two/CenterOfMass/ChannelNumber=7
Hexdetector/VLayer/Two/CenterOfMass/Timeranges/size=1
Hexdetector/VLayer/Two/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/VLayer/Two/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/VLayer/Two/CenterOfMass/Polarity=2
Hexdetector/VLayer/Two/CenterOfMass/Threshold=0.05

; w1
Hexdetector/WLayer/One/SignalExtractionMethod=1
Hexdetector/WLayer/One/CenterOfMass/AcqirisInstrument=8
Hexdetector/WLayer/One/CenterOfMass/ChannelNumber=3
Hexdetector/WLayer/One/CenterOfMass/Timeranges/size=1
Hexdetector/WLayer/One/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/WLayer/One/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/WLayer/One/CenterOfMass/Polarity=2
Hexdetector/WLayer/One/CenterOfMass/Threshold=0.05

; w2
Hexdetector/WLayer/Two/SignalExtractionMethod=1
Hexdetector/WLayer/Two/CenterOfMass/AcqirisInstrument=8
Hexdetector/WLayer/Two/CenterOfMass/ChannelNumber=2
Hexdetector/WLayer/Two/CenterOfMass/Timeranges/size=1
Hexdetector/WLayer/Two/CenterOfMass/Timeranges/1/LowerLimit=0
Hexdetector/WLayer/Two/CenterOfMass/Timeranges/1/UpperLimit=20000
Hexdetector/WLayer/Two/CenterOfMass/Polarity=2
Hexdetector/WLayer/Two/CenterOfMass/Threshold=0.05


; setup how the timing information should be used to reconstruct the detector hits
Hexdetector/AnalysisMethod = 1  ; 1: achims resort routine
Hexdetector/HexSorting/TimeSumU=150
Hexdetector/HexSorting/TimeSumUWidth=10
Hexdetector/HexSorting/TimeSumV=150
Hexdetector/HexSorting/TimeSumVWidth=10
Hexdetector/HexSorting/TimeSumW=150
Hexdetector/HexSorting/TimeSumWWidth=10
Hexdetector/HexSorting/MaxRuntime=160      ;Is the highest Timesum + the heighest TimesumWidth
Hexdetector/HexSorting/DeadTimeAnode=20
Hexdetector/HexSorting/DeadTimeMCP=20
Hexdetector/HexSorting/MCPRadius=88
Hexdetector/HexSorting/ScalefactorU=0.32
Hexdetector/HexSorting/CenterX=0
Hexdetector/HexSorting/CenterY=0
Hexdetector/HexSorting/SettingsFilename=/path/to/this/ini/file/HexDetParameters.ini


; define the particles that correspond to the detector hits and how they are
; identified and information needed for calculating the particle momentum and
; energy.
Hexdetector/Particles/BackgroundP/Charge = 1
Hexdetector/Particles/BackgroundP/Mass = 28
Hexdetector/Particles/BackgroundP/ConditionType = 0
Hexdetector/Particles/BackgroundP/ToFCondition/Low = 11000
Hexdetector/Particles/BackgroundP/ToFCondition/High = 11500

Hexdetector/Particles/BackgroundP/Spectrometer/BFieldIsOn = false
Hexdetector/Particles/BackgroundP/Spectrometer/CyclotronPeriode = 0
Hexdetector/Particles/BackgroundP/Spectrometer/RotationClockwise = true
Hexdetector/Particles/BackgroundP/Spectrometer/Regions/size = 1
Hexdetector/Particles/BackgroundP/Spectrometer/Regions/1/Length = 50
Hexdetector/Particles/BackgroundP/Spectrometer/Regions/1/EField = 2

Hexdetector/Particles/BackgroundP/Corrections/T0 = -820
Hexdetector/Particles/BackgroundP/Corrections/CorrectX = -10.4
Hexdetector/Particles/BackgroundP/Corrections/CorrectY = -2.2
Hexdetector/Particles/BackgroundP/Corrections/ScaleX = 1
Hexdetector/Particles/BackgroundP/Corrections/ScaleY = 1
Hexdetector/Particles/BackgroundP/Corrections/Angle = 0

; PostProcessor that will calibrate the Hexdetector and get determine all
; advanced parameters for the hexdetector resort routine. The parameters will
; be written to the settings file that is set in the Hexdetectors Hexsettings
; "SettingsFilename" parameter. This is done when the ratio exceeds the
; "RatioFullBins". The current ratio is returned.
[PostProcessor]
HexdetectorCalibrator/ID = 170
HexdetectorCalibrator/Write = false
HexdetectorCalibrator/Hide = true
HexdetectorCalibrator/Detector = Hexdetector
HexdetectorCalibrator/RatioFullBins = 0.9
RatioHistory/ID = 64
RatioHistory/Write = false
RatioHistory/Hide = false
RatioHistory/HistName = HexdetectorCalibrator
RatioHistory/Size = 5000


; PostProcessors that will allow to determine the non advanced parameters that
; need to be set for the hexdetector resort routine to work properly.

;;---timesums of the anode wires for---
; u
[PostProcessor]
tsu/ID = 162
tsu/Write = false
tsu/Hide = true
tsu/Detector = Hexdetector
tsu/Layer = U
tsu/TimeRangeLow = 0
tsu/TimeRangeHigh = 40000
TimesumU/ID = 60 ; make histogram from the value
TimesumU/Write = true
TimesumU/Hide = false
TimesumU/HistName = tsu
TimesumU/XNbrBins = 2000
TimesumU/XLow = 0
TimesumU/XUp = 200
TimesumU/XTitle = "Timesum U [ns]"
; v
[PostProcessor]
tsv/ID = 162
tsv/Write = false
tsv/Hide = true
tsv/Detector = Hexdetector
tsv/Layer = V
tsv/TimeRangeLow = 0
tsv/TimeRangeHigh = 40000
TimesumV/ID = 60 ; make histogram from the value
TimesumV/Write = true
TimesumV/Hide = false
TimesumV/HistName = tsu
TimesumV/XNbrBins = 2000
TimesumV/XLow = 0
TimesumV/XUp = 200
TimesumV/XTitle = "Timesum V [ns]"
; w
[PostProcessor]
tsw/ID = 162
tsw/Write = false
tsw/Hide = true
tsw/Detector = Hexdetector
tsw/Layer = W
tsw/TimeRangeLow = 0
tsw/TimeRangeHigh = 40000
TimesumW/ID = 60 ; make histogram from the value
TimesumW/Write = true
TimesumW/Hide = false
TimesumW/HistName = tsu
TimesumW/XNbrBins = 2000
TimesumW/XLow = 0
TimesumW/XUp = 200
TimesumW/XTitle = "Timesum W [ns]"


;; ---Deadtimes for ---
; MCP
[PostProcessor]
deadMCP_/ID = 153
deadMCP_/Write = false
deadMCP_/Hide = true
deadMCP_/Detector = Hexdetector
deadMCP_/XNbrBins = 2000
deadMCP_/XLow = 0
deadMCP_/XUp = 100
deadMCP_/XTitle = "Deadtime MCP [ns]"
DeadMCP/ID = 62 ; sum up the single histograms
DeadMCP/Write = true
DeadMCP/Hide = false
DeadMCP/HistName = deadMCP_
; U1
[PostProcessor]
deadU1_/ID = 167
deadU1_/Write = false
deadU1_/Hide = true
deadU1_/Detector = Hexdetector
deadU1_/Layer = U
deadU1_/Wireend = 1
deadU1_/XNbrBins = 2000
deadU1_/XLow = 0
deadU1_/XUp = 100
deadU1_/XTitle = "Deadtime U1 [ns]"
DeadU1/ID = 62 ; sum up the single histograms
DeadU1/Write = true
DeadU1/Hide = false
DeadU1/HistName = deadU1_
; U2
[PostProcessor]
deadU2_/ID = 167
deadU2_/Write = false
deadU2_/Hide = true
deadU2_/Detector = Hexdetector
deadU2_/Layer = U
deadU2_/Wireend = 2
deadU2_/XNbrBins = 2000
deadU2_/XLow = 0
deadU2_/XUp = 100
deadU2_/XTitle = "Deadtime U2 [ns]"
DeadU2/ID = 62 ; sum up the single histograms
DeadU2/Write = true
DeadU2/Hide = false
DeadU2/HistName = deadU2_
; V1
[PostProcessor]
deadV1_/ID = 167
deadV1_/Write = false
deadV1_/Hide = true
deadV1_/Detector = Hexdetector
deadV1_/Layer = V
deadV1_/Wireend = 1
deadV1_/XNbrBins = 2000
deadV1_/XLow = 0
deadV1_/XUp = 100
deadV1_/XTitle = "Deadtime V1 [ns]"
DeadV1/ID = 62 ; sum up the single histograms
DeadV1/Write = true
DeadV1/Hide = false
DeadV1/HistName = deadV1_
; V2
[PostProcessor]
deadV2_/ID = 167
deadV2_/Write = false
deadV2_/Hide = true
deadV2_/Detector = Hexdetector
deadV2_/Layer = V
deadV2_/Wireend = 2
deadV2_/XNbrBins = 2000
deadV2_/XLow = 0
deadV2_/XUp = 100
deadV2_/XTitle = "Deadtime V2 [ns]"
DeadV2/ID = 62 ; sum up the single histograms
DeadV2/Write = true
DeadV2/Hide = false
DeadV2/HistName = deadV2_
; W1
[PostProcessor]
deadW1_/ID = 167
deadW1_/Write = false
deadW1_/Hide = true
deadW1_/Detector = Hexdetector
deadW1_/Layer = W
deadW1_/Wireend = 1
deadW1_/XNbrBins = 2000
deadW1_/XLow = 0
deadW1_/XUp = 100
deadW1_/XTitle = "Deadtime W1 [ns]"
DeadW1/ID = 62 ; sum up the single histograms
DeadW1/Write = true
DeadW1/Hide = false
DeadW1/HistName = deadW1_
; W2
[PostProcessor]
deadW2_/ID = 167
deadW2_/Write = false
deadW2_/Hide = true
deadW2_/Detector = Hexdetector
deadW2_/Layer = W
deadW2_/Wireend = 2
deadW2_/XNbrBins = 2000
deadW2_/XLow = 0
deadW2_/XUp = 100
deadW2_/XTitle = "Deadtime W2 [ns]"
DeadW2/ID = 62 ; sum up the single histograms
DeadW2/Write = true
DeadW2/Hide = false
DeadW2/HistName = deadW2_

;;---Detector images from the first good signals for layers---
; UV
[PostProcessor]
detUV_ns_/ID = 164
detUV_ns_/Write = false
detUV_ns_/Hide = true
detUV_ns_/Detector = Hexdetector
detUV_ns_/TimeRangeLow = 0
detUV_ns_/TimeRangeHigh = 40000
detUV_ns_/FirstLayer = U
detUV_ns_/TimesumFirstLayerLow = 140
detUV_ns_/TimesumFirstLayerHigh = 160
detUV_ns_/SecondLayer = V
detUV_ns_/TimesumSecondLayerLow = 140
detUV_ns_/TimesumSecondLayerHigh = 160
detUV_ns_/XNbrBins = 300
detUV_ns_/XLow = -150
detUV_ns_/XUp = 150
detUV_ns_/XTitle =  "X_UV [ns]"
detUV_ns_/YNbrBins = 300
detUV_ns_/YLow = -150
detUV_ns_/YUp = 150
detUV_ns_/YTitle =  "Y_UV [ns]"
DetUV_ns/ID = 62 ; sum up the single image
DetUV_ns/Write = true
DetUV_ns/Hide = false
DetUV_ns/HistName = detUV_ns_
; UW
[PostProcessor]
detUW_ns_/ID = 164
detUW_ns_/Write = false
detUW_ns_/Hide = true
detUW_ns_/Detector = Hexdetector
detUW_ns_/TimeRangeLow = 0
detUW_ns_/TimeRangeHigh = 40000
detUW_ns_/FirstLayer = U
detUW_ns_/TimesumFirstLayerLow = 140
detUW_ns_/TimesumFirstLayerHigh = 160
detUW_ns_/SecondLayer = W
detUW_ns_/TimesumSecondLayerLow = 140
detUW_ns_/TimesumSecondLayerHigh = 160
detUW_ns_/XNbrBins = 300
detUW_ns_/XLow = -150
detUW_ns_/XUp = 150
detUW_ns_/XTitle =  "X_UW [ns]"
detUW_ns_/YNbrBins = 300
detUW_ns_/YLow = -150
detUW_ns_/YUp = 150
detUW_ns_/YTitle =  "Y_UW [ns]"
DetUW_ns/ID = 62 ; sum up the single image
DetUW_ns/Write = true
DetUW_ns/Hide = false
DetUW_ns/HistName = detUW_ns_
; VW
[PostProcessor]
detVW_ns_/ID = 164
detVW_ns_/Write = false
detVW_ns_/Hide = true
detVW_ns_/Detector = Hexdetector
detVW_ns_/TimeRangeLow = 0
detVW_ns_/TimeRangeHigh = 40000
detVW_ns_/FirstLayer = V
detVW_ns_/TimesumFirstLayerLow = 140
detVW_ns_/TimesumFirstLayerHigh = 160
detVW_ns_/SecondLayer = W
detVW_ns_/TimesumSecondLayerLow = 140
detVW_ns_/TimesumSecondLayerHigh = 160
detVW_ns_/XNbrBins = 300
detVW_ns_/XLow = -150
detVW_ns_/XUp = 150
detVW_ns_/XTitle =  "X_VW [ns]"
detVW_ns_/YNbrBins = 300
detVW_ns_/YLow = -150
detVW_ns_/YUp = 150
detVW_ns_/YTitle =  "Y_VW [ns]"
DetVW_ns/ID = 62 ; sum up the single image
DetVW_ns/Write = true
DetVW_ns/Hide = false
DetVW_ns/HistName = detVW_ns_



;; PostProcessors that allow to define the parameters for identifying signals in
;; the traces.

; The raw traces of (put in the same instrId and ChNbr that you put in the above
; definition of the detector). Create an average of the MCP signal, that one can
; compare later to the accumulated raw mcp identified signals.

; mcp
[PostProcessor]
MCP/ID = 110
MCP/Write = false
MCP/Hide = false
MCP/InstrumentId = 8
MCP/ChannelNbr = 8
; U1
[PostProcessor]
U1/ID = 110
U1/Write = false
U1/Hide = false
U1/InstrumentId = 8
U1/ChannelNbr = 10
; U2
[PostProcessor]
U2/ID = 110
U2/Write = false
U2/Hide = false
U2/InstrumentId = 8
U2/ChannelNbr = 11
; V1
[PostProcessor]
V1/ID = 110
V1/Write = false
V1/Hide = false
V1/InstrumentId = 8
V1/ChannelNbr = 6
; V2
[PostProcessor]
V2/ID = 110
V2/Write = false
V2/Hide = false
V2/InstrumentId = 8
V2/ChannelNbr = 7
; W1
[PostProcessor]
W1/ID = 110
W1/Write = false
W1/Hide = false
W1/InstrumentId = 8
W1/ChannelNbr = 3
; W2
[PostProcessor]
W2/ID = 110
W2/Write = false
W2/Hide = false
W2/InstrumentId = 8
W2/ChannelNbr = 2

; the height of the identfied signals vs. their fwhm for
;mcp
[PostProcessor]
MCPHeightVsFwhm_/ID = 152
MCPHeightVsFwhm_/Write = false
MCPHeightVsFwhm_/Hide = true
MCPHeightVsFwhm_/Detector = Hexdetector
MCPHeightVsFwhm_/XTitle = "Fwhm [ns]"
MCPHeightVsFwhm_/XNbrBins = 500
MCPHeightVsFwhm_/XLow = 0
MCPHeightVsFwhm_/XUp = 50
MCPHeightVsFwhm_/YTitle = "Signal Height [V]"
MCPHeightVsFwhm_/YNbrBins = 500
MCPHeightVsFwhm_/YLow = 0
MCPHeightVsFwhm_/YUp = 5
MCPHeightVsFwhm/ID = 62    ;sum up the single shot histogram
MCPHeightVsFwhm/Write = true
MCPHeightVsFwhm/Hide = false
MCPHeightVsFwhm/HistName = MCPHeightVsFwhm_
;U1
[PostProcessor]
U1HeightVsFwhm_/ID = 161
U1HeightVsFwhm_/Write = false
U1HeightVsFwhm_/Hide = true
U1HeightVsFwhm_/Detector = Hexdetector
U1HeightVsFwhm_/Layer = U
U1HeightVsFwhm_/Wireend = 1
U1HeightVsFwhm_/XNbrBins = 500
U1HeightVsFwhm_/XLow = 0
U1HeightVsFwhm_/XUp = 50
U1HeightVsFwhm_/XTitle = "Fwhm [ns]"
U1HeightVsFwhm_/YNbrBins = 500
U1HeightVsFwhm_/YLow = 0
U1HeightVsFwhm_/YUp = 5
U1HeightVsFwhm_/YTitle = "Signal Height [V]"
U1HeightVsFwhm/ID = 62    ;sum up the single shot histogram
U1HeightVsFwhm/Write = true
U1HeightVsFwhm/Hide = false
U1HeightVsFwhm/HistName = U1HeightVsFwhm_
;U2
[PostProcessor]
U2HeightVsFwhm_/ID = 161
U2HeightVsFwhm_/Write = false
U2HeightVsFwhm_/Hide = true
U2HeightVsFwhm_/Detector = Hexdetector
U2HeightVsFwhm_/Layer = U
U2HeightVsFwhm_/Wireend = 2
U2HeightVsFwhm_/XNbrBins = 500
U2HeightVsFwhm_/XLow = 0
U2HeightVsFwhm_/XUp = 50
U2HeightVsFwhm_/XTitle = "Fwhm [ns]"
U2HeightVsFwhm_/YNbrBins = 500
U2HeightVsFwhm_/YLow = 0
U2HeightVsFwhm_/YUp = 5
U2HeightVsFwhm_/YTitle = "Signal Height [V]"
U2HeightVsFwhm/ID = 62    ;sum up the single shot histogram
U2HeightVsFwhm/Write = true
U2HeightVsFwhm/Hide = false
U2HeightVsFwhm/HistName = U2HeightVsFwhm_
;V1
[PostProcessor]
V1HeightVsFwhm_/ID = 161
V1HeightVsFwhm_/Write = false
V1HeightVsFwhm_/Hide = true
V1HeightVsFwhm_/Detector = Hexdetector
V1HeightVsFwhm_/Layer = V
V1HeightVsFwhm_/Wireend = 1
V1HeightVsFwhm_/XNbrBins = 500
V1HeightVsFwhm_/XLow = 0
V1HeightVsFwhm_/XUp = 50
V1HeightVsFwhm_/XTitle = "Fwhm [ns]"
V1HeightVsFwhm_/YNbrBins = 500
V1HeightVsFwhm_/YLow = 0
V1HeightVsFwhm_/YUp = 5
V1HeightVsFwhm_/YTitle = "Signal Height [V]"
V1HeightVsFwhm/ID = 62    ;sum up the single shot histogram
V1HeightVsFwhm/Write = true
V1HeightVsFwhm/Hide = false
V1HeightVsFwhm/HistName = V1HeightVsFwhm_
;V2
[PostProcessor]
V2HeightVsFwhm_/ID = 161
V2HeightVsFwhm_/Write = false
V2HeightVsFwhm_/Hide = true
V2HeightVsFwhm_/Detector = Hexdetector
V2HeightVsFwhm_/Layer = V
V2HeightVsFwhm_/Wireend = 2
V2HeightVsFwhm_/XNbrBins = 500
V2HeightVsFwhm_/XLow = 0
V2HeightVsFwhm_/XUp = 50
V2HeightVsFwhm_/XTitle = "Fwhm [ns]"
V2HeightVsFwhm_/YNbrBins = 500
V2HeightVsFwhm_/YLow = 0
V2HeightVsFwhm_/YUp = 5
V2HeightVsFwhm_/YTitle = "Signal Height [V]"
V2HeightVsFwhm/ID = 62    ;sum up the single shot histogram
V2HeightVsFwhm/Write = true
V2HeightVsFwhm/Hide = false
V2HeightVsFwhm/HistName = V2HeightVsFwhm_
;W1
[PostProcessor]
W1HeightVsFwhm_/ID = 161
W1HeightVsFwhm_/Write = false
W1HeightVsFwhm_/Hide = true
W1HeightVsFwhm_/Detector = Hexdetector
W1HeightVsFwhm_/Layer = W
W1HeightVsFwhm_/Wireend = 1
W1HeightVsFwhm_/XNbrBins = 500
W1HeightVsFwhm_/XLow = 0
W1HeightVsFwhm_/XUp = 50
W1HeightVsFwhm_/XTitle = "Fwhm [ns]"
W1HeightVsFwhm_/YNbrBins = 500
W1HeightVsFwhm_/YLow = 0
W1HeightVsFwhm_/YUp = 5
W1HeightVsFwhm_/YTitle = "Signal Height [V]"
W1HeightVsFwhm/ID = 62    ;sum up the single shot histogram
W1HeightVsFwhm/Write = true
W1HeightVsFwhm/Hide = false
W1HeightVsFwhm/HistName = W1HeightVsFwhm_
;W2
[PostProcessor]
W2HeightVsFwhm_/ID = 161
W2HeightVsFwhm_/Write = false
W2HeightVsFwhm_/Hide = true
W2HeightVsFwhm_/Detector = Hexdetector
W2HeightVsFwhm_/Layer = W
W2HeightVsFwhm_/Wireend = 2
W2HeightVsFwhm_/XNbrBins = 500
W2HeightVsFwhm_/XLow = 0
W2HeightVsFwhm_/XUp = 50
W2HeightVsFwhm_/XTitle = "Fwhm [ns]"
W2HeightVsFwhm_/YNbrBins = 500
W2HeightVsFwhm_/YLow = 0
W2HeightVsFwhm_/YUp = 5
W2HeightVsFwhm_/YTitle = "Signal Height [V]"
W2HeightVsFwhm/ID = 62    ;sum up the single shot histogram
W2HeightVsFwhm/Write = true
W2HeightVsFwhm/Hide = false
W2HeightVsFwhm/HistName = W2HeightVsFwhm_


; tof spectrum created from the identified signals on the mcp channel, without
; reconstruction
[PostProcessor]
MCPHits_/ID = 151
MCPHits_/Write = false
MCPHits_/Hide = true
MCPHits_/Detector = Hexdetector
MCPHits_/XNbrBins = 5000
MCPHits_/XLow = 0
MCPHits_/XUp = 40000
MCPHits_/XTitle = MCP Hits_{without reconstruction} [ns]
MCPHits/ID = 62    ;sum up the histogram
MCPHits/Write = true
MCPHits/Hide = false
MCPHits/HistName = MCPHits_



;; PostProcessors to check whether the reconstruction did something meaningful

; Nbr reconstructed hits
[PostProcessor]
nrh_/ID = 165
nrh_/Write = false
nrh_/Hide = true
nrh_/Detector = Hexdetector
NRecHits/ID = 60 ; make histogram from the value
NRecHits/Write = true
NRecHits/Hide = false
NRecHits/HistName = nrh_
NRecHits/XNbrBins = 800
NRecHits/XLow = 0
NRecHits/XUp = 400
NRecHits/XTitle = Nbr of rec. hits

; Nbr mcp signals
[PostProcessor]
nmcph_/ID = 150
nmcph_/Write = false
nmcph_/Hide = true
nmcph_/Detector = Hexdetector
NMCPHits/ID = 60 ; make histogram from the value
NMCPHits/Write = true
NMCPHits/Hide = false
NMCPHits/HistName = nmcph_
NMCPHits/XNbrBins = 800
NMCPHits/XLow = 0
NMCPHits/XUp = 400
NMCPHits/XTitle = Nbr of MCP hits

; Nbr signals on wireend
; U1
[PostProcessor]
nU1h_/ID = 160
nU1h_/Write = false
nU1h_/Hide = true
nU1h_/Detector = Hexdetector
nU1h_/Layer = U
nU1h_/Wireend = 1
NU1Hits/ID = 60
NU1Hits/Write = true
NU1Hits/Hide = false
NU1Hits/HistName = nu1h_
NU1Hits/XNbrBins = 800
NU1Hits/XLow = 0
NU1Hits/XUp = 400
; U2
[PostProcessor]
nU2h_/ID = 160
nU2h_/Write = false
nU2h_/Hide = true
nU2h_/Detector = Hexdetector
nU2h_/Layer = U
nU2h_/Wireend = 2
NU2Hits/ID = 60
NU2Hits/Write = true
NU2Hits/Hide = false
NU2Hits/HistName = nU2h_
NU2Hits/XNbrBins = 800
NU2Hits/XLow = 0
NU2Hits/XUp = 400
; V1
[PostProcessor]
nV1h_/ID = 160
nV1h_/Write = false
nV1h_/Hide = true
nV1h_/Detector = Hexdetector
nV1h_/Layer = V
nV1h_/Wireend = 1
NV1Hits/ID = 60
NV1Hits/Write = true
NV1Hits/Hide = false
NV1Hits/HistName = nV1h_
NV1Hits/XNbrBins = 800
NV1Hits/XLow = 0
NV1Hits/XUp = 400
; V2
[PostProcessor]
nV2h_/ID = 160
nV2h_/Write = false
nV2h_/Hide = true
nV2h_/Detector = Hexdetector
nV2h_/Layer = V
nV2h_/Wireend = 2
NV2Hits/ID = 60
NV2Hits/Write = true
NV2Hits/Hide = false
NV2Hits/HistName = nV2h_
NV2Hits/XNbrBins = 800
NV2Hits/XLow = 0
NV2Hits/XUp = 400
; W1
[PostProcessor]
nW1h_/ID = 160
nW1h_/Write = false
nW1h_/Hide = true
nW1h_/Detector = Hexdetector
nW1h_/Layer = W
nW1h_/Wireend = 1
NW1Hits/ID = 60
NW1Hits/Write = true
NW1Hits/Hide = false
NW1Hits/HistName = nW1h_
NW1Hits/XNbrBins = 800
NW1Hits/XLow = 0
NW1Hits/XUp = 400
; W2
[PostProcessor]
nW2h_/ID = 160
nW2h_/Write = false
nW2h_/Hide = true
nW2h_/Detector = Hexdetector
nW2h_/Layer = W
nW2h_/Wireend = 2
NW2Hits/ID = 60
NW2Hits/Write = true
NW2Hits/Hide = false
NW2Hits/HistName = nW2h_
NW2Hits/XNbrBins = 800
NW2Hits/XLow = 0
NW2Hits/XUp = 400


;;---The reconsturcted hits (containing x, y and time information (t)) displayed
;;   in various ways with a condition on the not shown component---

; Time of Flight vs. the reconstruction method and a projection to the method axis
; to get a histogram of the used methods for reconstruction.
[PostProcessor]
tm_/ID = 166
tm_/Write = false
tm_/Hide = true
tm_/Detector = Hexdetector
tm_/XInput = method
tm_/YInput = t
tm_/ConditionInput = x
tm_/ConditionLow = -40000
tm_/ConditionHigh = 40000
tm_/XNbrBins = 200
tm_/XLow = 0
tm_/XUp = 100
tm_/XTitle =  "reconstruction method"
tm_/YNbrBins = 400
tm_/YLow = 0
tm_/YUp = 40000
tm_/YTitle =  "X [mm]"
RecMethod_/ID = 50
RecMethod_/Hide = true
RecMethod_/Write = false
RecMethod_/HistName = tm_
RecMethod_/LowerBound = 0
RecMethod_/UpperBound = 40000
RecMethod_/Axis = 0
RecMethod/ID = 62 ; sum up the single image
RecMethod/Write = true
RecMethod/Hide = false
RecMethod/HistName = RecMethod_


; Detector Image from selected time of flight region
[PostProcessor]
xy_/ID = 166
xy_/Write = false
xy_/Hide = true
xy_/Detector = Hexdetector
xy_/XInput = x
xy_/YInput = y
xy_/ConditionInput = t
xy_/ConditionLow = 0
xy_/ConditionHigh = 40000
xy_/XNbrBins = 300
xy_/XLow = -60
xy_/XUp = 60
xy_/XTitle =  "X [mm]"
xy_/YNbrBins = 400
xy_/YLow = -60
xy_/YUp = 60
xy_/YTitle =  "Y [mm]"
XY/ID = 62 ; sum up the single image
XY/Write = true
XY/Hide = false
XY/HistName = xy_

; "Fish" Spectrum (position vs. time of flight)
[PostProcessor]
xt_/ID = 166
xt_/Write = false
xt_/Hide = true
xt_/Detector = Hexdetector
xt_/XInput = t
xt_/YInput = x
xt_/ConditionInput = y
xt_/ConditionLow = -100
xt_/ConditionHigh = 100
xt_/XNbrBins = 500
xt_/XLow = 0
xt_/XUp = 40000
xt_/XTitle =  "t [ns]"
xt_/YNbrBins = 300
xt_/YLow = -60
xt_/YUp = 60
xt_/YTitle =  "X [mm]"
XT/ID = 62  ; sum up the single image
XT/Write = true
XT/Hide = false
XT/HistName = xt_

; "Fish" Spectrum (position vs. time of flight) - other position coordinate
[PostProcessor]
yt_/ID = 166
yt_/Write = false
yt_/Hide = true
yt_/Detector = Hexdetector
yt_/XInput = t
yt_/YInput = y
yt_/ConditionInput = x
yt_/ConditionLow = -100
yt_/ConditionHigh = 100
yt_/XNbrBins = 500
yt_/XLow = 0
yt_/XUp = 40000
yt_/XTitle =  "t [ns]"
yt_/YNbrBins = 300
yt_/YLow = -60
yt_/YUp = 60
yt_/YTitle =  "Y [mm]"
YT/ID = 62  ; sum up the single image
YT/Write = true
YT/Hide = false
YT/HistName = yt_

;PIPICO spectrum
[PostProcessor]
PIPICO_/ID = 220
PIPICO_/Write = false
PIPICO_/Hide = true
PIPICO_/XNbrBins = 100
PIPICO_/XLow = 2000
PIPICO_/XUp = 40000
PIPICO_/YNbrBins = 100
PIPICO_/YLow = 2000
PIPICO_/YUp = 40000
PIPICO_/FirstDetector = Hexdetector
PIPICO_/SecondDetector = Hexdetector
PIPICO/ID = 62    ;sum up the histogram
PIPICO/Write = true
PIPICO/Hide = false
PIPICO/HistName = PIPICO_

