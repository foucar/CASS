;
; this example shows how to detect whether a pnCCD frame contains a nanocrystal
; hit. As input it uses the tcp input.
;

; general setup

[Log]
LoggingLevel = "INFO"

[TCPInput]
Server = 192.168.0.190
Port = 9090
DataType = "shm"

;disable the pre analyzers as their functionality is ported to the new framework
[PreAnalyzer]
useCommercialCCDAnalyzer = false
usepnCCDAnalyzer = false

;setup the pnCCD

;-----------------------------------------------------------------------------
;; Define the image and the same image but with additional mask to filter out
;; regions with high pixel that are present even though there is no crystal hit
[PixelDetectors]
FilterPnCCD/Detector = 0
PnCCD/Detector = 0

FilterPnCCD/FrameProcessorType = "hll"
PnCCD/FrameProcessorType = "hll"

FilterPnCCD/HLLProcessing/CommonModeCalculationType = "simpleMean"
FilterPnCCD/HLLProcessing/CommonModeCorrection/Width = 128
FilterPnCCD/HLLProcessing/CommonModeCorrection/Multiplier = 5
FilterPnCCD/HLLProcessing/SimpleMeanCommonMode/MinNbrPixels = 8
PnCCD/HLLProcessing/CommonModeCalculationType = "simpleMean"
PnCCD/HLLProcessing/CommonModeCorrection/Width = 128
PnCCD/HLLProcessing/CommonModeCorrection/Multiplier = 5
PnCCD/HLLProcessing/SimpleMeanCommonMode/MinNbrPixels = 8

;FilterPnCCD/PixelFinderType = "range"
FilterPnCCD/AboveNoiseFinder/Multiplier = 5
;PnCCD/PixelFinderType = "range"
PnCCD/AboveNoiseFinder/Multiplier = 5

FilterPnCCD/PixelFinderType = "range"
FilterPnCCD/InRangeFinder/LowerThreshold = 220
FilterPnCCD/InRangeFinder/UpperThreshold = 1e6
PnCCD/PixelFinderType = "range"
PnCCD/InRangeFinder/LowerThreshold = 380
PnCCD/InRangeFinder/UpperThreshold = 1e6

FilterPnCCD/CoalescingFunctionType = "simple"  ; simple coalscing of pixels
FilterPnCCD/SimpleCoalescing/MaxPixelListSize = 10000
FilterPnCCD/SimpleCoalescing/MipThreshold = 1e6
FilterPnCCD/SimpleCoalescing/MaxRecursionDepth = 100
PnCCD/CoalescingFunctionType = "simple"  ; simple coalscing of pixels
PnCCD/SimpleCoalescing/MaxPixelListSize = 10000
PnCCD/SimpleCoalescing/MipThreshold = 1e6
PnCCD/SimpleCoalescing/MaxRecursionDepth = 10

FilterPnCCD/CorrectionMaps/NoisyPixelThreshold = 10
PnCCD/CorrectionMaps/NoisyPixelThreshold = 10

FilterPnCCD/CorrectionMaps/MapCreatorType = "onlinetest"  ; fast calculation with fixed amount of events taken to create the correction maps
FilterPnCCD/CorrectionMaps/FixedOnlineCreator/NbrFrames = 200
FilterPnCCD/CorrectionMaps/FixedOnlineCreator/WriteMaps = true
FilterPnCCD/CorrectionMaps/FixedOnlineCreator/Multiplier = 40



;FilterPnCCD/CorrectionMaps/InputOffsetNoiseFilename = "darkcal_0_20120220_1123.cal"
;PnCCD/CorrectionMaps/InputOffsetNoiseFilename = "darkcal_0_20120220_1123.cal"


; the masks
FilterPnCCD/CorrectionMaps/Mask/size = 13
PnCCD/CorrectionMaps/Mask/size = 6

FilterPnCCD/CorrectionMaps/Mask/1/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/1/LowerLeftX = 766
FilterPnCCD/CorrectionMaps/Mask/1/LowerLeftY = 589
FilterPnCCD/CorrectionMaps/Mask/1/UpperRightX = 1023
FilterPnCCD/CorrectionMaps/Mask/1/UpperRightY = 601
PnCCD/CorrectionMaps/Mask/1/MaskElementType = "square"
PnCCD/CorrectionMaps/Mask/1/LowerLeftX = 766
PnCCD/CorrectionMaps/Mask/1/LowerLeftY = 589
PnCCD/CorrectionMaps/Mask/1/UpperRightX = 1023
PnCCD/CorrectionMaps/Mask/1/UpperRightY = 601

FilterPnCCD/CorrectionMaps/Mask/2/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/2/LowerLeftX = 857
FilterPnCCD/CorrectionMaps/Mask/2/LowerLeftY = 512
FilterPnCCD/CorrectionMaps/Mask/2/UpperRightX = 904
FilterPnCCD/CorrectionMaps/Mask/2/UpperRightY = 593
PnCCD/CorrectionMaps/Mask/2/MaskElementType = "square"
PnCCD/CorrectionMaps/Mask/2/LowerLeftX = 857
PnCCD/CorrectionMaps/Mask/2/LowerLeftY = 512
PnCCD/CorrectionMaps/Mask/2/UpperRightX = 904
PnCCD/CorrectionMaps/Mask/2/UpperRightY = 593

FilterPnCCD/CorrectionMaps/Mask/3/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/3/LowerLeftX = 886
FilterPnCCD/CorrectionMaps/Mask/3/LowerLeftY = 595
FilterPnCCD/CorrectionMaps/Mask/3/UpperRightX = 893
FilterPnCCD/CorrectionMaps/Mask/3/UpperRightY = 1023
PnCCD/CorrectionMaps/Mask/3/MaskElementType = "square"
PnCCD/CorrectionMaps/Mask/3/LowerLeftX = 886
PnCCD/CorrectionMaps/Mask/3/LowerLeftY = 595
PnCCD/CorrectionMaps/Mask/3/UpperRightX = 893
PnCCD/CorrectionMaps/Mask/3/UpperRightY = 1023

FilterPnCCD/CorrectionMaps/Mask/4/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/4/LowerLeftX = 287
FilterPnCCD/CorrectionMaps/Mask/4/LowerLeftY = 512
FilterPnCCD/CorrectionMaps/Mask/4/UpperRightX = 300
FilterPnCCD/CorrectionMaps/Mask/4/UpperRightY = 1023
PnCCD/CorrectionMaps/Mask/4/MaskElementType = "square"
PnCCD/CorrectionMaps/Mask/4/LowerLeftX = 287
PnCCD/CorrectionMaps/Mask/4/LowerLeftY = 512
PnCCD/CorrectionMaps/Mask/4/UpperRightX = 300
PnCCD/CorrectionMaps/Mask/4/UpperRightY = 1023

FilterPnCCD/CorrectionMaps/Mask/5/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/5/LowerLeftX = 121
FilterPnCCD/CorrectionMaps/Mask/5/LowerLeftY = 0
FilterPnCCD/CorrectionMaps/Mask/5/UpperRightX = 121
FilterPnCCD/CorrectionMaps/Mask/5/UpperRightY = 494
PnCCD/CorrectionMaps/Mask/5/MaskElementType = "square"
PnCCD/CorrectionMaps/Mask/5/LowerLeftX = 121
PnCCD/CorrectionMaps/Mask/5/LowerLeftY = 0
PnCCD/CorrectionMaps/Mask/5/UpperRightX = 121
PnCCD/CorrectionMaps/Mask/5/UpperRightY = 494

FilterPnCCD/CorrectionMaps/Mask/6/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/6/LowerLeftX = 510
FilterPnCCD/CorrectionMaps/Mask/6/LowerLeftY = 0
FilterPnCCD/CorrectionMaps/Mask/6/UpperRightX = 513
FilterPnCCD/CorrectionMaps/Mask/6/UpperRightY = 1023
PnCCD/CorrectionMaps/Mask/6/MaskElementType = "square"
PnCCD/CorrectionMaps/Mask/6/LowerLeftX = 510
PnCCD/CorrectionMaps/Mask/6/LowerLeftY = 0
PnCCD/CorrectionMaps/Mask/6/UpperRightX = 513
PnCCD/CorrectionMaps/Mask/6/UpperRightY = 1023


; only the filtering mask elements
FilterPnCCD/CorrectionMaps/Mask/7/MaskElementType = "square"
FilterPnCCD/CorrectionMaps/Mask/7/LowerLeftX = 450
FilterPnCCD/CorrectionMaps/Mask/7/LowerLeftY = 0
FilterPnCCD/CorrectionMaps/Mask/7/UpperRightX = 580
FilterPnCCD/CorrectionMaps/Mask/7/UpperRightY = 1023
FilterPnCCD/CorrectionMaps/Mask/8/MaskElementType = "circle"
FilterPnCCD/CorrectionMaps/Mask/8/CenterX = 512
FilterPnCCD/CorrectionMaps/Mask/8/CenterY = 512
FilterPnCCD/CorrectionMaps/Mask/8/Radius = 100
FilterPnCCD/CorrectionMaps/Mask/9/MaskElementType = "ring"
FilterPnCCD/CorrectionMaps/Mask/9/InnerCenterX = 512
FilterPnCCD/CorrectionMaps/Mask/9/InnerCenterY = 512
FilterPnCCD/CorrectionMaps/Mask/9/OuterCenterX = 512
FilterPnCCD/CorrectionMaps/Mask/9/OuterCenterY = 512
FilterPnCCD/CorrectionMaps/Mask/9/InnerSemiAxisX = 300
FilterPnCCD/CorrectionMaps/Mask/9/InnerSemiAxisY = 300
FilterPnCCD/CorrectionMaps/Mask/9/OuterSemiAxisX = 511
FilterPnCCD/CorrectionMaps/Mask/9/OuterSemiAxisY = 511
FilterPnCCD/CorrectionMaps/Mask/10/MaskElementType = "triangle"
FilterPnCCD/CorrectionMaps/Mask/10/PointA_X = 0
FilterPnCCD/CorrectionMaps/Mask/10/PointA_Y = 512
FilterPnCCD/CorrectionMaps/Mask/10/PointB_X = 512
FilterPnCCD/CorrectionMaps/Mask/10/PointB_Y = 1023
FilterPnCCD/CorrectionMaps/Mask/10/PointC_X = 0
FilterPnCCD/CorrectionMaps/Mask/10/PointC_Y = 1023
FilterPnCCD/CorrectionMaps/Mask/11/MaskElementType = "triangle"
FilterPnCCD/CorrectionMaps/Mask/11/PointA_X = 0
FilterPnCCD/CorrectionMaps/Mask/11/PointA_Y = 512
FilterPnCCD/CorrectionMaps/Mask/11/PointB_X = 512
FilterPnCCD/CorrectionMaps/Mask/11/PointB_Y = 0
FilterPnCCD/CorrectionMaps/Mask/11/PointC_X = 0
FilterPnCCD/CorrectionMaps/Mask/11/PointC_Y = 0
FilterPnCCD/CorrectionMaps/Mask/12/MaskElementType = "triangle"
FilterPnCCD/CorrectionMaps/Mask/12/PointA_X = 1023
FilterPnCCD/CorrectionMaps/Mask/12/PointA_Y = 512
FilterPnCCD/CorrectionMaps/Mask/12/PointB_X = 512
FilterPnCCD/CorrectionMaps/Mask/12/PointB_Y = 0
FilterPnCCD/CorrectionMaps/Mask/12/PointC_X = 1023
FilterPnCCD/CorrectionMaps/Mask/12/PointC_Y = 0
FilterPnCCD/CorrectionMaps/Mask/13/MaskElementType = "triangle"
FilterPnCCD/CorrectionMaps/Mask/13/PointA_X = 1023
FilterPnCCD/CorrectionMaps/Mask/13/PointA_Y = 512
FilterPnCCD/CorrectionMaps/Mask/13/PointB_X = 512
FilterPnCCD/CorrectionMaps/Mask/13/PointB_Y = 1023
FilterPnCCD/CorrectionMaps/Mask/13/PointC_X = 1023
FilterPnCCD/CorrectionMaps/Mask/13/PointC_Y = 1023





;---- postprocessors----

;-------------- the correction maps----------------------------
[PostProcessor]
NoiseMap/ID = 107
NoiseMap/Detector = FilterPnCCD
NoiseMap/MapType = noise
NoiseMapRot/ID = 55
NoiseMapRot/HistName = NoiseMap
NoiseMapRot/Operation = 90DegCCW

[PostProcessor]
OffsetMap/ID = 107
OffsetMap/Detector = FilterPnCCD
OffsetMap/MapType = offset
OffsetMapRot/ID = 55
OffsetMapRot/HistName = OffsetMap
OffsetMapRot/Operation = 90DegCCW

[PostProcessor]
CorrMap/ID = 107
CorrMap/Detector = FilterPnCCD
CorrMap/MapType = correction
CorrMapRot/ID = 55
CorrMapRot/HistName = CorrMap
CorrMapRot/Operation = 90DegCCW





;-------------------------the filtered image--------------------
; the image to filter on
[PostProcessor]
FilterPnCCD/ID = 105
FilterPnCCD/Detector = FilterPnCCD
FilterPnCCDRot/ID = 55
FilterPnCCDRot/HistName = FilterPnCCD
FilterPnCCDRot/Operation = 90DegCCW

; histogram of all pixels
[PostProcessor]
FilterHist/ID = 106
FilterHist/Detector = FilterPnCCD
FilterHist/XNbrBins = 10000
FilterHist/XLow = -100
FilterHist/XUp = 33000
FilterHist/XTitle = pixel values [adu]


; histogram of non coalesced "photon" pixels
[PostProcessor]
FilterPixelHist/ID = 147
FilterPixelHist/Detector = FilterPnCCD
FilterPixelHist/XNbrBins = 10000
FilterPixelHist/XLow = -100
FilterPixelHist/XUp = 33000
FilterPixelHist/XTitle = pixel values [adu]

; the number of non coalesced "photon" pixels found
[PostProcessor]
FilterNbrPixels/ID = 149
FilterNbrPixels/Detector = FilterPnCCD

; image of non coalesced "photon" pixels as image (will add the pixel value
; at the position where the pixel was found
[PostProcessor]
FilterPixelImage/ID = 148
FilterPixelImage/Detector = FilterPnCCD
FilterPixelImage/PixelvalueAsWeight = true
FilterPixelImage/SpectralLowerLimit = 0
FilterPixelImage/SpectralUpperLimit = 16400
FilterPixelImage/XNbrBins = 1024
FilterPixelImage/XLow = 0
FilterPixelImage/XUp = 1023
FilterPixelImage/XTitle = columns
FilterPixelImage/YNbrBins = 1024
FilterPixelImage/YLow = 0
FilterPixelImage/YUp = 1023
FilterPixelImage/YTitle = rows
FilterPixelImageRot/ID = 55
FilterPixelImageRot/HistName = FilterPnCCD
FilterPixelImageRot/Operation = 90DegCCW
FilterPixelImageRotSum/ID = 62
FilterPixelImageRotSum/HistName = FilterPixelImageRot

; image of non coalesced "photon" pixels as histogram (will add just a 1
; at the position where the pixel was found
[PostProcessor]
FilterPixelImageHist/ID = 148
FilterPixelImageHist/Detector = FilterPnCCD
FilterPixelImageHist/PixelvalueAsWeight = false
FilterPixelImageHist/SpectralLowerLimit = 0
FilterPixelImageHist/SpectralUpperLimit = 16400
FilterPixelImageHist/XNbrBins = 1024
FilterPixelImageHist/XLow = 0
FilterPixelImageHist/XUp = 1023
FilterPixelImageHist/XTitle = columns
FilterPixelImageHist/YNbrBins = 1024
FilterPixelImageHist/YLow = 0
FilterPixelImageHist/YUp = 1023
FilterPixelImageHist/YTitle = rows
FilterPixelImageHistRot/ID = 55
FilterPixelImageHistRot/HistName = FilterPixelImageHist
FilterPixelImageHistRot/Operation = 90DegCCW
FilterPixelImageHistRotSum/ID = 62
FilterPixelImageHistRotSum/HistName = FilterPixelImageHistRot



 ; the number of coalesced "photon" pixels (hits) found
[;PostProcessor]
FilterNbrHits/ID = 145
FilterNbrHits/Detector = FilterPnCCD

; histogram of coalesced "photon" pixels (hits)
[;PostProcessor]
FilterHitHist/ID = 143
FilterHitHist/Detector = FilterPnCCD
FilterHitHist/SplitLevelLowerLimit = 0
FilterHitHist/SplitLevelUpperLimit = 100
FilterHitHist/XNbrBins = 1000
FilterHitHist/XLow = -100
FilterHitHist/XUp = 5000
FilterHitHist/XTitle = pixel values [adu]

; histogram of the splitlevel of coalesced "photon" (hit)
[;PostProcessor]
FilterHitSplitLvl/ID = 146
FilterHitSplitLvl/Detector = FilterPnCCD
FilterHitSplitLvl/XNbrBins = 80
FilterHitSplitLvl/XLow = 0
FilterHitSplitLvl/XUp = 100
FilterHitSplitLvl/XTitle = pixel values [adu]

; image of hits as image (will add the pixel value at the position where the hit is)
[;PostProcessor]
FilterHitImage/ID = 144
FilterHitImage/Detector = FilterPnCCD
FilterHitImage/PixelvalueAsWeight = true
FilterHitImage/SpectralLowerLimit = 0
FilterHitImage/SpectralUpperLimit = 16400
FilterHitImage/SplitLevelLowerLimit = 0
FilterHitImage/SplitLevelUpperLimit = 10
FilterHitImage/XNbrBins = 1024
FilterHitImage/XLow = 0
FilterHitImage/XUp = 1023
FilterHitImage/XTitle = columns
FilterHitImage/YNbrBins = 1024
FilterHitImage/YLow = 0
FilterHitImage/YUp = 1023
FilterHitImage/YTitle = rows
FilterHitImageRot/ID = 55
FilterHitImageRot/HistName = FilterHitImage
FilterHitImageRot/Operation = 90DegCCW
FilterHitImageRotSum/ID = 62
FilterHitImageRotSum/HistName = FilterHitImageRot

; image of hits as histogram (will increment the position where the hit is by 1)
[;PostProcessor]
FilterHitImageHist/ID = 144
FilterHitImageHist/Detector = FilterPnCCD
FilterHitImageHist/PixelvalueAsWeight = false
FilterHitImageHist/SpectralLowerLimit = 0
FilterHitImageHist/SpectralUpperLimit = 16400
FilterHitImageHist/SplitLevelLowerLimit = 0
FilterHitImageHist/SplitLevelUpperLimit = 10
FilterHitImageHist/XNbrBins = 1024
FilterHitImageHist/XLow = 0
FilterHitImageHist/XUp = 1023
FilterHitImageHist/XTitle = columns
FilterHitImageHist/YNbrBins = 1024
FilterHitImageHist/YLow = 0
FilterHitImageHist/YUp = 1023
FilterHitImageHist/YTitle = rows
FilterHitImageHistRot/ID = 55
FilterHitImageHistRot/HistName = FilterHitImageHist
FilterHitImageHistRot/Operation = 90DegCCW
FilterHitImageHistRotSum/ID = 62
FilterHitImageHistRotSum/HistName = FilterHitImageHistRot







;---------------------------------a crystal hit -----------------

;take interal over upper region of the hit sprectrum and make a history of it
[;PostProcessor]
Integral/ID = 51
Integral/HistName = HitHist
Integral/LowerBound = 100
Integral/UpperBound = 1e10
Integral/Hide = false
IntegralHistory/ID = 64
IntegralHistory/HistName = Integral
IntegralHistory/Size = 1200
IntegralHistory/Hide = false

; when we found at least this number of pixels in the image its a hit
[PostProcessor]
IsCrystal/ID = 9
IsCrystal/HistName = FilterNbrPixels
IsCrystal/LowerLimit = 1
IsCrystal/UpperLimit = 1e10
IsCrystal/Hide = false

; average the IsHit state and make a history of it
[PostProcessor]
CrystalAverage/ID = 61
CrystalAverage/HistName = IsCrystal
CrystalAverage/NbrOfAverages = 50
CrystalAverage/Hide = false
CrystalHistory/ID = 64
CrystalHistory/HistName = CrystalAverage
CrystalHistory/Size = 2100
CrystalHistory/Hide = false





;----------------------the unfilterd images--------------------------------

; the raw image
[PostProcessor]
PnCCD/ID = 105
PnCCD/Detector = PnCCD
PnCCDRot/ID = 55
PnCCDRot/HistName = PnCCD
PnCCDRot/Operation = 90DegCCW
PnCCDRotSum/ID = 62
PnCCDRotSum/HistName = PnCCDRot


; histogram of all pixels
[PostProcessor]
PnCCDHist/ID = 106
PnCCDHist/Detector = PnCCD
PnCCDHist/XNbrBins = 10000
PnCCDHist/XLow = -100
PnCCDHist/XUp = 33000
PnCCDHist/XTitle = pixel values [adu]


; histogram of non coalesced "photon" pixels
[PostProcessor]
PnCCDPixelHist/ID = 147
PnCCDPixelHist/Detector = PnCCD
PnCCDPixelHist/XNbrBins = 10000
PnCCDPixelHist/XLow = -100
PnCCDPixelHist/XUp = 33000
PnCCDPixelHist/XTitle = pixel values [adu]

; the number of non coalesced "photon" pixels found
[PostProcessor]
PnCCDNbrPixels/ID = 149
PnCCDNbrPixels/Detector = PnCCD

; image of non coalesced "photon" pixels as image (will add the pixel value
; at the position where the pixel was found
[PostProcessor]
PnCCDPixelImage/ID = 148
PnCCDPixelImage/Detector = PnCCD
PnCCDPixelImage/PixelvalueAsWeight = true
PnCCDPixelImage/SpectralLowerLimit = 0
PnCCDPixelImage/SpectralUpperLimit = 16400
PnCCDPixelImage/XNbrBins = 1024
PnCCDPixelImage/XLow = 0
PnCCDPixelImage/XUp = 1023
PnCCDPixelImage/XTitle = columns
PnCCDPixelImage/YNbrBins = 1024
PnCCDPixelImage/YLow = 0
PnCCDPixelImage/YUp = 1023
PnCCDPixelImage/YTitle = rows
PnCCDPixelImageRot/ID = 55
PnCCDPixelImageRot/HistName = PnCCDPixelImage
PnCCDPixelImageRot/Operation = 90DegCCW
PnCCDPixelImageRotSum/ID = 62
PnCCDPixelImageRotSum/HistName = PnCCDPixelImageRot

; image of non coalesced "photon" pixels as histogram (will add just a 1
; at the position where the pixel was found
[PostProcessor]
PnCCDPixelImageHist/ID = 148
PnCCDPixelImageHist/Detector = PnCCD
PnCCDPixelImageHist/PixelvalueAsWeight = false
PnCCDPixelImageHist/SpectralLowerLimit = 0
PnCCDPixelImageHist/SpectralUpperLimit = 16400
PnCCDPixelImageHist/XNbrBins = 1024
PnCCDPixelImageHist/XLow = 0
PnCCDPixelImageHist/XUp = 1023
PnCCDPixelImageHist/XTitle = columns
PnCCDPixelImageHist/YNbrBins = 1024
PnCCDPixelImageHist/YLow = 0
PnCCDPixelImageHist/YUp = 1023
PnCCDPixelImageHist/YTitle = rows
PnCCDPixelImageHistRot/ID = 55
PnCCDPixelImageHistRot/HistName = PnCCDPixelImageHist
PnCCDPixelImageHistRot/Operation = 90DegCCW
PnCCDPixelImageHistRotSum/ID = 62
PnCCDPixelImageHistRotSum/HistName = PnCCDPixelImageHistRot


; histogram of coalesced "photon" pixels (hits)
[PostProcessor]
PnCCDHitHist/ID = 143
PnCCDHitHist/Detector = PnCCD
PnCCDHitHist/SplitLevelLowerLimit = 0
PnCCDHitHist/SplitLevelUpperLimit = 100
PnCCDHitHist/XNbrBins = 1000
PnCCDHitHist/XLow = -100
PnCCDHitHist/XUp = 5000
PnCCDHitHist/XTitle = pixel values [adu]

; the number of coalesced "photon" pixels (hits) found
[PostProcessor]
PnCCDNbrHits/ID = 145
PnCCDNbrHits/Detector = PnCCD

 ; histogram of the splitlevel of coalesced "photon" (hit)
[PostProcessor]
PnCCDHitSplitLvl/ID = 146
PnCCDHitSplitLvl/Detector = PnCCD
PnCCDHitSplitLvl/XNbrBins = 500
PnCCDHitSplitLvl/XLow = 0
PnCCDHitSplitLvl/XUp = 500
PnCCDHitSplitLvl/XTitle = pixel values [adu]

; image of hits as image (will add the pixel value at the position where the hit is)
[PostProcessor]
PnCCDHitImage/ID = 144
PnCCDHitImage/Detector = PnCCD
PnCCDHitImage/PixelvalueAsWeight = true
PnCCDHitImage/SpectralLowerLimit = 0
PnCCDHitImage/SpectralUpperLimit = 16400
PnCCDHitImage/SplitLevelLowerLimit = 0
PnCCDHitImage/SplitLevelUpperLimit = 100
PnCCDHitImage/XNbrBins = 1024
PnCCDHitImage/XLow = 0
PnCCDHitImage/XUp = 1023
PnCCDHitImage/XTitle = columns
PnCCDHitImage/YNbrBins = 1024
PnCCDHitImage/YLow = 0
PnCCDHitImage/YUp = 1023
PnCCDHitImage/YTitle = rows
PnCCDHitImageRot/ID = 55
PnCCDHitImageRot/HistName = PnCCDHitImage
PnCCDHitImageRot/Operation = 90DegCCW
PnCCDHitImageRotSum/ID = 62
PnCCDHitImageRotSum/HistName = PnCCDHitImageRot

; image of hits as histogram (will increment the position where the hit is by 1)
[PostProcessor]
PnCCDHitImageHist/ID = 144
PnCCDHitImageHist/Detector = PnCCD
PnCCDHitImageHist/PixelvalueAsWeight = false
PnCCDHitImageHist/SpectralLowerLimit = 0
PnCCDHitImageHist/SpectralUpperLimit = 16400
PnCCDHitImageHist/SplitLevelLowerLimit = 0
PnCCDHitImageHist/SplitLevelUpperLimit = 100
PnCCDHitImageHist/XNbrBins = 1024
PnCCDHitImageHist/XLow = 0
PnCCDHitImageHist/XUp = 1023
PnCCDHitImageHist/XTitle = columns
PnCCDHitImageHist/YNbrBins = 1024
PnCCDHitImageHist/YLow = 0
PnCCDHitImageHist/YUp = 1023
PnCCDHitImageHist/YTitle = rows
PnCCDHitImageHistRot/ID = 55
PnCCDHitImageHistRot/HistName = PnCCDHitImageHist
PnCCDHitImageHistRot/Operation = 90DegCCW
PnCCDHitImageHistRotSum/ID = 62
PnCCDHitImageHistRotSum/HistName = PnCCDHitImageHistRot


;---------------------images shown when we hit a crystal-----------------------

; the raw image
[PostProcessor]
PnCCDRotIsCrystal/ID = 55
PnCCDRotIsCrystal/HistName = PnCCD
PnCCDRotIsCrystal/Operation = 90DegCCW
PnCCDRotIsCrystal/ConditionName = IsCrystal

; the non coalesced pixels from the raw image as image
PnCCDPixelImageRotIsCrystal/ID = 55
PnCCDPixelImageRotIsCrystal/HistName = PnCCDPixelImage
PnCCDPixelImageRotIsCrystal/Operation = 90DegCCW
PnCCDPixelImageRotIsCrystal/ConditionName = IsCrystal
PnCCDPixelImageRotSumIsCrystal/ID = 62
PnCCDPixelImageRotSumIsCrystal/HistName = PnCCDPixelImageRotIsCrystal
PnCCDPixelImageRotSumIsCrystal/ConditionName = IsCrystal

; the non coalesced pixels from the raw image as hist
PnCCDPixelImageHistRotIsCrystal/ID = 55
PnCCDPixelImageHistRotIsCrystal/HistName = PnCCDPixelImageHist
PnCCDPixelImageHistRotIsCrystal/Operation = 90DegCCW
PnCCDPixelImageHistRotIsCrystal/ConditionName = IsCrystal
PnCCDPixelImageHistRotSumIsCrystal/ID = 62
PnCCDPixelImageHistRotSumIsCrystal/HistName = PnCCDPixelImageHistRotIsCrystal
PnCCDPixelImageHistRotSumIsCrystal/ConditionName = IsCrystal

; the coalesced pixels from the raw image as image
PnCCDHitImageRotIsCrystal/ID = 55
PnCCDHitImageRotIsCrystal/HistName = PnCCDHitImage
PnCCDHitImageRotIsCrystal/Operation = 90DegCCW
PnCCDHitImageRotIsCrystal/ConditionName = IsCrystal
PnCCDHitImageRotSumIsCrystal/ID = 62
PnCCDHitImageRotSumIsCrystal/HistName = PnCCDHitImageRotIsCrystal
PnCCDHitImageRotSumIsCrystal/ConditionName = IsCrystal

; the coalesced pixels from the raw image as image
PnCCDHitImageHistRotIsCrystal/ID = 55
PnCCDHitImageHistRotIsCrystal/HistName = PnCCDHitImageHist
PnCCDHitImageHistRotIsCrystal/Operation = 90DegCCW
PnCCDHitImageHistRotIsCrystal/ConditionName = IsCrystal
PnCCDHitImageHistRotSumIsCrystal/ID = 62
PnCCDHitImageHistRotSumIsCrystal/HistName = PnCCDHitImageHistRotIsCrystal
PnCCDHitImageHistRotSumIsCrystal/ConditionName = IsCrystal

; sum up the split level whe we hit
PnCCDHitSplitLvlSumIsCrystal/ID = 62
PnCCDHitSplitLvlSumIsCrystal/HistName = PnCCDHitSplitLvl
PnCCDHitSplitLvlSumIsCrystal/ConditionName = IsCrystal


;-----------------------the output---------------------------------------------

;write chosen output to special hdf5 file to be used with crystfel
[;PostProcessor]
dump/ID = 1002
dump/HistName = PnCCDRot
dump/Compress = true
dump/ConditionName = IsCrystal
