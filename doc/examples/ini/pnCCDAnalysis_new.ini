;
; This postprocessor should show how the new analysis frame work for
; pixel detectors is used. In particular the pnCCD detector data is
; treated as an example here.
;

; general setup

[Converter]
Used = pixeldetector

;disable the pre analyzers as their functionality is ported to the             
;new framework
[PreAnalyzer]
useCommercialCCDAnalyzer = false
usepnCCDAnalyzer = false


;setup the pixeldetectors
[PixelDetectors]
FrontPnCCD/Detector = 0                       ; 0: Front pnCCD detector
;FrontPnCCD/FrameProcessorType = "none"        ; none: Just use the raw image
FrontPnCCD/FrameProcessorType = "hll"         ; hll: HLL type processing 
FrontPnCCD/HLLProcessing/CommonModeCalculationType = "none" 
;FrontPnCCD/HLLProcessing/CommonModeCalculationType = "mean" 
;FrontPnCCD/HLLProcessing/CommonModeCalculationType = "median" 
FrontPnCCD/HLLProcessing/CommonModeCorrection/Width = 128
FrontPnCCD/HLLProcessing/MeanCommonMode/NbrMaxDisregardedValues = 5
FrontPnCCD/HLLProcessing/MeanCommonMode/NbrMinDisregardedValues = 5
FrontPnCCD/HLLProcessing/MeanCommonMode/MinNbrPixels = 50
FrontPnCCD/HLLProcessing/MedianCommonMode/NbrMaxDisregardedValues = 5
FrontPnCCD/HLLProcessing/MedianCommonMode/NbrMinDisregardedValues = 5
FrontPnCCD/HLLProcessing/MedianCommonMode/MinNbrPixels = 50
FrontPnCCD/PixelFinderType = "aboveNoise"     ; uses noise map to identify pixels
FrontPnCCD/AboveNoiseFinder/Multiplier = 4
FrontPnCCD/CoalescingFunctionType = "simple"  ; simple coalscing of pixels
FrontPnCCD/SimpleCoalescing/MaxPixelListSize = 10000 ; if there are more than this amount of pixels in the frame skip the coalscing
FrontPnCCD/SimpleCoalescing/MipThreshold = 1e6       ; if one pixel has a value higher than this than the hit is regarded as "ionizing particle" and skipped
FrontPnCCD/SimpleCoalescing/MaxRecursionDepth = 7    ; how deep will the recursive algorithm go
FrontPnCCD/CorrectionMaps/MapCreatorType = "fixed"   ; fixed amount of events taken to create the correction maps
FrontPnCCD/CorrectionMaps/FixedCreator/NbrFrames = 200
;FrontPnCCD/CorrectionMaps/FixedCreator/StartInstantly = true
FrontPnCCD/CorrectionMaps/FixedCreator/DisregardedHighValues = 0
FrontPnCCD/CorrectionMaps/FixedCreator/DisregardedLowValues = 0
FrontPnCCD/CorrectionMaps/FixedCreator/UseMedian = false
FrontPnCCD/CorrectionMaps/FixedCreator/WriteMaps = true
;FrontPnCCD/CorrectionMaps/InputOffsetNoiseFilename = "darkcal_0.cal"
;FrontPnCCD/CorrectionMaps/InputOffsetNoiseFiletype = "cass"
;FrontPnCCD/CorrectionMaps/OutputOffsetNoiseFilename = "darkcal"
;FrontPnCCD/CorrectionMaps/OutputOffsetNoiseFiletype = "hll"
;FrontPnCCD/CorrectionMaps/InputCTEGainFilename = ""
;FrontPnCCD/CorrectionMaps/InputCTEGainFiletype= "hll"


;---- postprocessors----

; the proccesed image
[PostProcessor]
FrontPnCCD/ID = 105
FrontPnCCD/Detector = FrontPnCCD
FrontPnCCD/Write = true

; display the correction maps
[PostProcessor]
FrontNoiseMap/ID = 107
FrontNoiseMap/Detector = FrontPnCCD
FrontNoiseMap/MapType = noise

[PostProcessor]
FrontOffsetMap/ID = 107
FrontOffsetMap/Detector = FrontPnCCD
FrontOffsetMap/MapType = offset

[PostProcessor] ; the resulting correction map for the hll processing
FrontCorrMap/ID = 107
FrontCorrMap/Detector = FrontPnCCD
FrontCorrMap/MapType = correction

[PostProcessor] ; histogram of all pixels
FrontHist/ID = 106
FrontHist/Detector = FrontPnCCD
FrontHist/XNbrBins = 1000
FrontHist/XLow = 0
FrontHist/XUp = 16400
FrontHist/XTitle = pixel values [adu]


[PostProcessor] ; histogram of non coalesced "photon" pixels
FrontPixelHist/ID = 147
FrontPixelHist/Detector = FrontPnCCD
FrontPixelHist/XNbrBins = 1000
FrontPixelHist/XLow = 0
FrontPixelHist/XUp = 16400
FrontPixelHist/XTitle = pixel values [adu]

; image of non coalesced "photon" pixels as image (will add the pixel value
; at the position where the pixel was found
[PostProcessor]
FrontPixelImage/ID = 148
FrontPixelImage/Detector = FrontPnCCD
FrontPixelImage/PixelvalueAsWeight = true
FrontPixelImage/SpectralLowerLimit = 0
FrontPixelImage/SpectralUpperLimit = 16400
FrontPixelImage/XNbrBins = 256
FrontPixelImage/XLow = 0
FrontPixelImage/XUp = 1024
FrontPixelImage/XTitle = columns
FrontPixelImage/YNbrBins = 256
FrontPixelImage/YLow = 0
FrontPixelImage/YUp = 1024
FrontPixelImage/YTitle = rows

; image of non coalesced "photon" pixels as histogram (will add just a 1
; at the position where the pixel was found
[PostProcessor]
FrontPixelImageHist/ID = 148
FrontPixelImageHist/Detector = FrontPnCCD
FrontPixelImageHist/PixelvalueAsWeight = false
FrontPixelImageHist/SpectralLowerLimit = 0
FrontPixelImageHist/SpectralUpperLimit = 16400
FrontPixelImageHist/XNbrBins = 256
FrontPixelImageHist/XLow = 0
FrontPixelImageHist/XUp = 1024
FrontPixelImageHist/XTitle = columns
FrontPixelImageHist/YNbrBins = 256
FrontPixelImageHist/YLow = 0
FrontPixelImageHist/YUp = 1024
FrontPixelImageHist/YTitle = rows

[PostProcessor] ; the number of non coalesced "photon" pixels found
FrontNbrPixels/ID = 149
FrontNbrPixels/Detector = FrontPnCCD



[PostProcessor] ; histogram of the splitlevel of coalesced "photon" (hit)
FrontHitSplitLvl/ID = 146
FrontHitSplitLvl/Detector = FrontPnCCD
FrontHitSplitLvl/XNbrBins = 1000
FrontHitSplitLvl/XLow = 0
FrontHitSplitLvl/XUp = 16400
FrontHitSplitLvl/XTitle = pixel values [adu]

[PostProcessor] ; histogram of coalesced "photon" pixels (hits)
FrontHitHist/ID = 143
FrontHitHist/Detector = FrontPnCCD
FrontHitHist/SplitLevelLowerLimit = 0
FrontHitHist/SplitLevelUpperLimit = 10
FrontHitHist/XNbrBins = 1000
FrontHitHist/XLow = 0
FrontHitHist/XUp = 16400
FrontHitHist/XTitle = pixel values [adu]

; image of hits as image (will add the pixel value at the position 
; where the hit is)
[PostProcessor]
FrontHitImage/ID = 144
FrontHitImage/Detector = FrontPnCCD
FrontHitImage/PixelvalueAsWeight = true
FrontHitImage/SpectralLowerLimit = 0
FrontHitImage/SpectralUpperLimit = 16400
FrontHitImage/SplitLevelLowerLimit = 0
FrontHitImage/SplitLevelUpperLimit = 10
FrontHitImage/XNbrBins = 256
FrontHitImage/XLow = 0
FrontHitImage/XUp = 1024
FrontHitImage/XTitle = columns
FrontHitImage/YNbrBins = 256
FrontHitImage/YLow = 0
FrontHitImage/YUp = 1024
FrontHitImage/YTitle = rows

; image of hits as histogram (will increment the position where the hit 
; is by 1)
[PostProcessor]
FrontHitImageHist/ID = 144
FrontHitImageHist/Detector = FrontPnCCD
FrontHitImageHist/PixelvalueAsWeight = false
FrontHitImageHist/SpectralLowerLimit = 0
FrontHitImageHist/SpectralUpperLimit = 16400
FrontHitImageHist/SplitLevelLowerLimit = 0
FrontHitImageHist/SplitLevelUpperLimit = 10
FrontHitImageHist/XNbrBins = 256
FrontHitImageHist/XLow = 0
FrontHitImageHist/XUp = 1024
FrontHitImageHist/XTitle = columns
FrontHitImageHist/YNbrBins = 256
FrontHitImageHist/YLow = 0
FrontHitImageHist/YUp = 1024
FrontHitImageHist/YTitle = rows

[PostProcessor] ; the number of coalesced "photon" pixels (hits) found
FrontNbrHits/ID = 145
FrontNbrHits/Detector = FrontPnCCD



;write chosen output to root file (needs option cernroot enabled)
[;PostProcessor]
dump/ID = 2000
