;;
;; This example shows how to get the quad-anode dector data. The signals of this
;; detector are recorded with the acqiris adc. The assignment on which channel
;; recorded which signal needs to be set up in order for CASS to extract the
;; times of the signal and from these calculate the postions.
;;

;---------------------------------setup----------------------------------------

;we only need acqiris data, so no ccd preprocessing should be done
[PreAnalyzer]
useCommercialCCDAnalyzer=false
usepnCCDAnalyzer=false

;only extract acqiris adc data from the datagram
[Converter]
Used = Acqiris


;;-------------PostProcessors (setup of the detector is done below)-------------

;;---timesums of the anode wires for---
; x
[PostProcessor]
tsx/ID = 162
tsx/Write = false
tsx/Hide = true
tsx/Detector = Quaddetector
tsx/Layer = X
tsx/TimeRangeLow = 000
tsx/TimeRangeHigh = 40000
TimesumX/ID = 60 ; make histogram from the value
TimesumX/HistName = tsx
TimesumX/XNbrBins = 2000
TimesumX/XLow = 0
TimesumX/XUp = 200
TimesumXSum/ID = 62 ; sum up histogram
TimesumXSum/HistName = TimesumX

; y
[PostProcessor]
tsy/ID = 162
tsy/Write = false
tsy/Hide = true
tsy/Detector = Quaddetector
tsy/Layer = Y
tsy/TimeRangeLow = 000
tsy/TimeRangeHigh = 40000
TimesumY/ID = 60 ; make histogram from the value
TimesumY/HistName = tsy
TimesumY/XNbrBins = 2000
TimesumY/XLow = 0
TimesumY/XUp = 200
TimesumYSum/ID = 62 ; sum up histogram
TimesumYSum/HistName = TimesumY



;;---how many signals were found on the wire and the mcp and how many were
;;   reconstructed to match hits on the detector---

; Nbr reconstructed hits
[PostProcessor]
nrh_/ID = 165
nrh_/Write = false
nrh_/Hide = true
nrh_/Detector = Quaddetector
NRecHits/ID = 60 ; make histogram from the value
NRecHits/HistName = nrh_
NRecHits/XNbrBins = 400
NRecHits/XLow = 0
NRecHits/XUp = 200


; Nbr mcp signals
[PostProcessor]
nmcph_/ID = 150
nmcph_/Write = false
nmcph_/Hide = true
nmcph_/Detector = Quaddetector
NMCPHits/ID = 60 ; make histogram from the value
NMCPHits/HistName = nmcph_
NMCPHits/XNbrBins = 800
NMCPHits/XLow = 0
NMCPHits/XUp = 400
NMCPHitsSum/ID = 62 ; sum up histogram
NMCPHitsSum/HistName = NMCPHits

; Nbr signals on wireend x1
[PostProcessor]
nx1h_/ID = 160
nx1h_/Write = false
nx1h_/Hide = true
nx1h_/Detector = Quaddetector
nx1h_/Layer = X
nx1h_/Wireend = 1
NX1Hits/ID = 60
NX1Hits/HistName = nx1h_
NX1Hits/XNbrBins = 800
NX1Hits/XLow = 0
NX1Hits/XUp = 400
NX1HitsSum/ID = 62 ; sum up histogram
NX1HitsSum/HistName = NX1Hits

; Nbr signals on wireend x2
[PostProcessor]
nx2h_/ID = 160
nx2h_/Write = false
nx2h_/Hide = true
nx2h_/Detector = Quaddetector
nx2h_/Layer = X
nx2h_/Wireend = 2
NX2Hits/ID = 60 ; make histogram from the value
NX2Hits/HistName = nx2h_
NX2Hits/XNbrBins = 800
NX2Hits/XLow = 0
NX2Hits/XUp = 400
NX2HitsSum/ID = 62 ; sum up histogram
NX2HitsSum/HistName = NX2Hits

; Nbr signals on wireend y1
[PostProcessor]
ny1h_/ID = 160
ny1h_/Write = false
ny1h_/Hide = true
ny1h_/Detector = Quaddetector
ny1h_/Layer = Y
ny1h_/Wireend = 1
NY1Hits/ID = 60 ; make histogram from the value
NY1Hits/HistName = ny1h_
NY1Hits/XNbrBins = 800
NY1Hits/XLow = 0
NY1Hits/XUp = 400
NY1HitsSum/ID = 62 ; sum up histogram
NY1HitsSum/HistName = NY1Hits

; Nbr signals on wireend y2
[PostProcessor]
ny2h_/ID = 160
ny2h_/Write = false
ny2h_/Hide = true
ny2h_/Detector = Quaddetector
ny2h_/Layer = Y
ny2h_/Wireend = 2
NY2Hits/ID = 60  ; make histogram from the value
NY2Hits/HistName = ny2h_
NY2Hits/XNbrBins = 800
NY2Hits/XLow = 0
NY2Hits/XUp = 400
NY2HitsSum/ID = 62 ; sum up histogram
NY2HitsSum/HistName = NY2Hits



;;---Detector image from the first good signals---

[PostProcessor]
detxy_ns_/ID = 164
detxy_ns_/Detector = Quaddetector
detxy_ns_/TimeRangeLow = 0
detxy_ns_/TimeRangeHigh = 20000
detxy_ns_/FirstLayer = X
detxy_ns_/TimesumFirstLayerLow = 95
detxy_ns_/TimesumFirstLayerHigh = 105
detxy_ns_/SecondLayer = Y
detxy_ns_/TimesumSecondLayerLow = 95
detxy_ns_/TimesumSecondLayerHigh = 105
detxy_ns_/XNbrBins = 300
detxy_ns_/XLow = -150
detxy_ns_/XUp = 150
detxy_ns_/YNbrBins = 300
detxy_ns_/YLow = -150
detxy_ns_/YUp = 150
DetXY_ns/ID = 62 ; sum up the single image
DetXY_ns/HistName = detxy_ns_




;;---The reconsturcted hits (containing x, y and time information (t)) displayed
;;   in various ways with a condition on the not shown component---

; Detector Image from selected time of flight region
[PostProcessor]
xy_/ID = 166
xy_/Write = false
xy_/Hide = true
xy_/Detector = Quaddetector
xy_/XInput = x
xy_/YInput = y
xy_/ConditionInput = t
xy_/ConditionLow = 0
xy_/ConditionHigh = 40000
xy_/XNbrBins = 300
xy_/XLow = -60
xy_/XUp = 60
xy_/YNbrBins = 400
xy_/YLow = -60
xy_/YUp = 60
XY/ID = 62 ; sum up the single image
XY/HistName = xy_

; "Fish" Spectrum (position vs. time of flight)
[PostProcessor]
xt_/ID = 166
xt_/Write = false
xt_/Hide = true
xt_/Detector = Quaddetector
xt_/XInput = t
xt_/YInput = x
xt_/ConditionInput = y
xt_/ConditionLow = -100
xt_/ConditionHigh = 100
xt_/XNbrBins = 500
xt_/XLow = 0
xt_/XUp = 40000
xt_/YNbrBins = 300
xt_/YLow = -60
xt_/YUp = 60
XT/ID = 62  ; sum up the single image
XT/HistName = xt_

; "Fish" Spectrum (position vs. time of flight) - other position coordinate
[PostProcessor]
yt_/ID = 166
yt_/Write = false
yt_/Hide = true
yt_/Detector = Quaddetector
yt_/XInput = t
yt_/YInput = y
yt_/ConditionInput = x
yt_/ConditionLow = -100
yt_/ConditionHigh = 100
yt_/XNbrBins = 500
yt_/XLow = 0
yt_/XUp = 40000
yt_/YNbrBins = 300
yt_/YLow = -60
yt_/YUp = 60
YT/ID = 62  ; sum up the single image
YT/HistName = yt_


;;---the raw acqiris channel traces for the signals of the detetector. Only
;;   displayed for a sigle shot. Except for the MCP where we create an averaged
;;   spectrum---

; mcp
[PostProcessor]
MCP/ID = 110
MCP/Write = false
MCP/InstrumentId = 8
MCP/ChannelNbr = 16
MCPAverage/ID = 61  ; create averaged spectrum
MCPAverage/NbrOfAverages = 0.  ; 0: cumulative average
MCPAverage/HistName = MCP

; x1
[PostProcessor]
X1/ID = 110
X1/Write = false
X1/InstrumentId = 8
X1/ChannelNbr = 18

; x2
[PostProcessor]
X2/ID = 110
X2/Write = false
X2/InstrumentId = 8
X2/ChannelNbr = 19

; y1
[PostProcessor]
Y1/ID = 110
Y1/Write = false
Y1/InstrumentId = 8
Y1/ChannelNbr = 14

; y2
[PostProcessor]
Y2/ID = 110
Y2/Write = false
Y2/InstrumentId = 8
Y2/ChannelNbr = 15




;;---some physical results---

;PIPICO spectrum
[PostProcessor]
PIPICO_/ID = 220
PIPICO_/XNbrBins = 100
PIPICO_/XLow = 2000
PIPICO_/XUp = 40000
PIPICO_/YNbrBins = 100
PIPICO_/YLow = 2000
PIPICO_/YUp = 40000
PIPICO_/FirstDetector = Quaddetector
PIPICO_/SecondDetector = Quaddetector
PIPICO/ID = 62    ;sum up the histogram
PIPICO/HistName = PIPICO_


; tof spectrum created from the identified signals on the mcp channel
[PostProcessor]
MCPHits_/ID = 151
MCPHits_/Detector = Quaddetector
MCPHits_/XNbrBins = 5000
MCPHits_/XLow = 0
MCPHits_/XUp = 40000
MCPHits_/Write = false
MCPHits_/Hide = true
MCPHits/ID = 62    ;sum up the histogram
MCPHits/HistName = MCPHits_


;;---the momentum and and resulting energies from a particle corresponding to a
;;   detector hit (setup of the particles is done below).

; background particle: px in atomic units
[PostProcessor]
px_/ID = 250
px_/Write = false
px_/Hide = true
px_/Detector = Quaddetector
px_/Particle = BackgroundP
px_/Property = px
px_/XNbrBins = 300
px_/XLow = -30
px_/XUp = 30
PX/ID = 62    ;sum up the histogram
PX/HistName = px_

; background particle: py in atomic units
[PostProcessor]
py_/ID = 250
py_/Write = false
py_/Hide = true
py_/Detector = Quaddetector
py_/Particle = BackgroundP
py_/Property = py
py_/XNbrBins = 300
py_/XLow = -30
py_/XUp = 30
PY/ID = 62    ;sum up the histogram
PY/HistName = py_

; background particle: pz in atomic units
[PostProcessor]
pz_/ID = 250
pz_/Write = false
pz_/Hide = true
pz_/Detector = Quaddetector
pz_/Particle = BackgroundP
pz_/Property = pz
pz_/XNbrBins = 1000
pz_/XLow = -30
pz_/XUp = 30
PZ/ID = 62    ;sum up the histogram
PZ/HistName = pz_

; background particle: energy in atomic units
[PostProcessor]
eau_/ID = 250
eau_/Write = false
eau_/Hide = true
eau_/Detector = Quaddetector
eau_/Particle = BackgroundP
eau_/Property = e_au
eau_/XNbrBins = 300
eau_/XLow = -0.1
eau_/XUp = 1
Eau/ID = 62
Eau/HistName = eau_

; background particle: energy in eV
[PostProcessor]
eeV_/ID = 250
eeV_/Write = false
eeV_/Hide = true
eeV_/Detector = Quaddetector
eeV_/Particle = BackgroundP
eeV_/Property = e_eV
eeV_/XNbrBins = 300
eeV_/XLow = -0.1
eeV_/XUp = 6
EeV/ID = 62
EeV/HistName = eeV_

; background particle: corresponding detector hit x in mm
[PostProcessor]
xmm_/ID = 250
xmm_/Write = false
xmm_/Hide = true
xmm_/Detector = Quaddetector
xmm_/Particle = BackgroundP
xmm_/Property = x_mm
xmm_/XNbrBins = 300
xmm_/XLow = -60
xmm_/XUp = 60
Xmm/ID = 62
Xmm/HistName = xmm_

; background particle: corresponding detector hit y in mm
[PostProcessor]
ymm_/ID = 250
ymm_/Write = false
ymm_/Hide = true
ymm_/Detector = Quaddetector
ymm_/Particle = BackgroundP
ymm_/Property = y_mm
ymm_/XNbrBins = 300
ymm_/XLow = -60
ymm_/XUp = 60
Ymm/ID = 62
Ymm/HistName = ymm_

; background particle: py vs. px
[PostProcessor]
pxpy_/ID = 251
pxpy_/Write = false
pxpy_/Hide = true
pxpy_/Detector = Quaddetector
pxpy_/Particle = BackgroundP
pxpy_/FirstProperty = px
pxpy_/SecondProperty = py
pxpy_/XNbrBins = 300
pxpy_/XLow = -60
pxpy_/XUp = 60
pxpy_/YNbrBins = 300
pxpy_/YLow = -60
pxpy_/YUp = 60
PXPY/ID = 62
PXPY/HistName = pxpy_

; background particle: pz vs. px
[PostProcessor]
pxpz_/ID = 251
pxpz_/Write = false
pxpz_/Hide = true
pxpz_/Detector = Quaddetector
pxpz_/Particle = BackgroundP
pxpz_/FirstProperty = px
pxpz_/SecondProperty = pz
pxpz_/XNbrBins = 300
pxpz_/XLow = -60
pxpz_/XUp = 60
pxpz_/YNbrBins = 300
pxpz_/YLow = -60
pxpz_/YUp = 60
PXPZ/ID = 62
PXPZ/HistName = pxpz_







;;---the setup of the Quad Detector. All layers and signals are set individually.
;;   One has to set up which Acqiris channel the signal was recorded on and
;;   specify how one wants to identify singals and extract the timing infromation
;;   from them. Please refer to the documentation for the individual posibilies
;;   available and their parameters that need to be set here.---

;general setup
[AcqirisDetectors]
Quaddetector/DetectorType = 0
Quaddetector/DelaylineType = 0

; mcp
Quaddetector/MCP/SignalExtractionMethod=1  ;1: center of mass algorithm
Quaddetector/MCP/CenterOfMass/AcqirisInstrument=8
Quaddetector/MCP/CenterOfMass/ChannelNumber=16
Quaddetector/MCP/CenterOfMass/Timeranges/size=1
Quaddetector/MCP/CenterOfMass/Timeranges/1/LowerLimit=0
Quaddetector/MCP/CenterOfMass/Timeranges/1/UpperLimit=40000
Quaddetector/MCP/CenterOfMass/Polarity=2
Quaddetector/MCP/CenterOfMass/Threshold=0.05

; x1
Quaddetector/XLayer/One/SignalExtractionMethod=1  ;1: center of mass algorithm
Quaddetector/XLayer/One/CenterOfMass/AcqirisInstrument=8
Quaddetector/XLayer/One/CenterOfMass/ChannelNumber=18
Quaddetector/XLayer/One/CenterOfMass/Timeranges/size=1
Quaddetector/XLayer/One/CenterOfMass/Timeranges/1/LowerLimit=0
Quaddetector/XLayer/One/CenterOfMass/Timeranges/1/UpperLimit=40000
Quaddetector/XLayer/One/CenterOfMass/Polarity=2
Quaddetector/XLayer/One/CenterOfMass/Threshold=0.05

; x2
Quaddetector/XLayer/Two/SignalExtractionMethod=1  ;1: center of mass algorithm
Quaddetector/XLayer/Two/CenterOfMass/AcqirisInstrument=8
Quaddetector/XLayer/Two/CenterOfMass/ChannelNumber=19
Quaddetector/XLayer/Two/CenterOfMass/Timeranges/size=1
Quaddetector/XLayer/Two/CenterOfMass/Timeranges/1/LowerLimit=0
Quaddetector/XLayer/Two/CenterOfMass/Timeranges/1/UpperLimit=40000
Quaddetector/XLayer/Two/CenterOfMass/Polarity=2
Quaddetector/XLayer/Two/CenterOfMass/Threshold=0.05

; y1
Quaddetector/YLayer/One/SignalExtractionMethod=1  ;1: center of mass algorithm
Quaddetector/YLayer/One/CenterOfMass/AcqirisInstrument=8
Quaddetector/YLayer/One/CenterOfMass/ChannelNumber=14
Quaddetector/YLayer/One/CenterOfMass/Timeranges/size=1
Quaddetector/YLayer/One/CenterOfMass/Timeranges/1/LowerLimit=0
Quaddetector/YLayer/One/CenterOfMass/Timeranges/1/UpperLimit=40000
Quaddetector/YLayer/One/CenterOfMass/Polarity=2
Quaddetector/YLayer/One/CenterOfMass/Threshold=0.05

; y2
Quaddetector/YLayer/Two/SignalExtractionMethod=1  ;1: center of mass algorithm
Quaddetector/YLayer/Two/CenterOfMass/AcqirisInstrument=8
Quaddetector/YLayer/Two/CenterOfMass/ChannelNumber=15
Quaddetector/YLayer/Two/CenterOfMass/Timeranges/size=1
Quaddetector/YLayer/Two/CenterOfMass/Timeranges/1/LowerLimit=0
Quaddetector/YLayer/Two/CenterOfMass/Timeranges/1/UpperLimit=40000
Quaddetector/YLayer/Two/CenterOfMass/Polarity=2
Quaddetector/YLayer/Two/CenterOfMass/Threshold=0.05


; setup how the timing information should be used to reconstruct the detector hits
Quaddetector/AnalysisMethod = 0 ; 0: simple reconstruction
Quaddetector/Simple/Runtime=150
Quaddetector/Simple/McpRadius=60
Quaddetector/Simple/LayersToUse=0
Quaddetector/Simple/TimesumFirstLayerLow=70
Quaddetector/Simple/TimesumFirstLayerHigh=80
Quaddetector/Simple/ScalefactorFirstLayer=0.37
Quaddetector/Simple/TimesumSecondLayerLow=70
Quaddetector/Simple/TimesumSecondLayerHigh=80
Quaddetector/Simple/ScalefactorSecondLayer=0.37




; define the particles that correspond to the detector hits and how they are
; identified and information needed for calculating the particle momentum and
; energy.
Quaddetector/Particles/BackgroundP/Charge = 1
Quaddetector/Particles/BackgroundP/Mass = 28
Quaddetector/Particles/BackgroundP/ConditionType = 0 ; 0: just identify particle by time of flight
Quaddetector/Particles/BackgroundP/ToFCondition/Low = 11000
Quaddetector/Particles/BackgroundP/ToFCondition/High = 11500

Quaddetector/Particles/BackgroundP/Spectrometer/BFieldIsOn = false
Quaddetector/Particles/BackgroundP/Spectrometer/CyclotronPeriode = 0
Quaddetector/Particles/BackgroundP/Spectrometer/RotationClockwise = true
Quaddetector/Particles/BackgroundP/Spectrometer/Regions/size = 1
Quaddetector/Particles/BackgroundP/Spectrometer/Regions/1/Length = 50
Quaddetector/Particles/BackgroundP/Spectrometer/Regions/1/EField = 2

Quaddetector/Particles/BackgroundP/Corrections/T0 = -820
Quaddetector/Particles/BackgroundP/Corrections/CorrectX = -10.4
Quaddetector/Particles/BackgroundP/Corrections/CorrectY = -2.2
Quaddetector/Particles/BackgroundP/Corrections/ScaleX = 1
Quaddetector/Particles/BackgroundP/Corrections/ScaleY = 1
Quaddetector/Particles/BackgroundP/Corrections/Angle = 0
